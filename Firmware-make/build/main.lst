ARM GAS  /tmp/ccv35OkG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccv35OkG.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c3_rx;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c3_tx;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  52:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  53:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart1;
  56:Core/Src/main.c **** UART_HandleTypeDef huart2;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  58:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  59:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** static void MX_GPIO_Init(void);
  68:Core/Src/main.c **** static void MX_DMA_Init(void);
  69:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  70:Core/Src/main.c **** static void MX_SPI1_Init(void);
  71:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  72:Core/Src/main.c **** static void MX_I2C3_Init(void);
  73:Core/Src/main.c **** static void MX_CRC_Init(void);
  74:Core/Src/main.c **** static void MX_RTC_Init(void);
  75:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** void i2c_scan(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   uint8_t Buffer[25] = {0};
  84:Core/Src/main.c ****   uint8_t Space[] = " - ";
  85:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
  86:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /*-[ I2C Bus Scanning ]-*/
ARM GAS  /tmp/ccv35OkG.s 			page 3


  89:Core/Src/main.c ****   uint8_t ret;
  90:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, StartMSG, sizeof(StartMSG), HAL_MAX_DELAY);
  91:Core/Src/main.c ****   for (uint8_t i = 1; i < 128; i++)
  92:Core/Src/main.c ****   {
  93:Core/Src/main.c ****     ret = HAL_I2C_IsDeviceReady(&hi2c3, (uint16_t)(i << 1), 3, 5);
  94:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
  95:Core/Src/main.c ****     {
  96:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Space, sizeof(Space), HAL_MAX_DELAY);
  97:Core/Src/main.c ****     }
  98:Core/Src/main.c ****     else if (ret == HAL_OK)
  99:Core/Src/main.c ****     {
 100:Core/Src/main.c ****       sprintf(Buffer, "0x%X\r\n", i);
 101:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, EndMSG, sizeof(EndMSG), HAL_MAX_DELAY);
 105:Core/Src/main.c ****   /*--[ Scanning Done ]--*/
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** void print_bmp280_id()
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   uint8_t id;
 110:Core/Src/main.c ****   uint8_t ret = bmp280_getid(&id);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   uint8_t buf[16] = {0};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   snprintf(buf, sizeof(buf), "BMP280 ID:%02X\r\n", id);
 115:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, sizeof(buf), 10000);
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** /* USER CODE END 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****  * @brief  The application entry point.
 121:Core/Src/main.c ****  * @retval int
 122:Core/Src/main.c ****  */
 123:Core/Src/main.c **** int main(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END 1 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 132:Core/Src/main.c ****   HAL_Init();
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END Init */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Configure the system clock */
 139:Core/Src/main.c ****   SystemClock_Config();
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END SysInit */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccv35OkG.s 			page 4


 146:Core/Src/main.c ****   MX_GPIO_Init();
 147:Core/Src/main.c ****   MX_DMA_Init();
 148:Core/Src/main.c ****   MX_USART2_UART_Init();
 149:Core/Src/main.c ****   MX_SPI1_Init();
 150:Core/Src/main.c ****   MX_USART1_UART_Init();
 151:Core/Src/main.c ****   MX_I2C3_Init();
 152:Core/Src/main.c ****   MX_CRC_Init();
 153:Core/Src/main.c ****   MX_RTC_Init();
 154:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   i2c_scan();
 157:Core/Src/main.c ****   print_bmp280_id();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END 2 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Infinite loop */
 162:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 163:Core/Src/main.c ****   while (1)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     HAL_GPIO_TogglePin(USR_LED1_GPIO_Port, USR_LED1_Pin);
 167:Core/Src/main.c ****     HAL_Delay(500);
 168:Core/Src/main.c ****     /* USER CODE END WHILE */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE END 3 */
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****  * @brief System Clock Configuration
 177:Core/Src/main.c ****  * @retval None
 178:Core/Src/main.c ****  */
 179:Core/Src/main.c **** void SystemClock_Config(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 182:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 185:Core/Src/main.c ****    */
 186:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 187:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 190:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 191:Core/Src/main.c ****    */
 192:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202:Core/Src/main.c ****   {
ARM GAS  /tmp/ccv35OkG.s 			page 5


 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 207:Core/Src/main.c ****    */
 208:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 209:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****  * @brief CRC Initialization Function
 222:Core/Src/main.c ****  * @param None
 223:Core/Src/main.c ****  * @retval None
 224:Core/Src/main.c ****  */
 225:Core/Src/main.c **** static void MX_CRC_Init(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 235:Core/Src/main.c ****   hcrc.Instance = CRC;
 236:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 243:Core/Src/main.c **** }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /**
 246:Core/Src/main.c ****  * @brief I2C3 Initialization Function
 247:Core/Src/main.c ****  * @param None
 248:Core/Src/main.c ****  * @retval None
 249:Core/Src/main.c ****  */
 250:Core/Src/main.c **** static void MX_I2C3_Init(void)
 251:Core/Src/main.c **** {
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
ARM GAS  /tmp/ccv35OkG.s 			page 6


 260:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 261:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 262:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 263:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 264:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 265:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 266:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 267:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 268:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 269:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****  * @brief RTC Initialization Function
 280:Core/Src/main.c ****  * @param None
 281:Core/Src/main.c ****  * @retval None
 282:Core/Src/main.c ****  */
 283:Core/Src/main.c **** static void MX_RTC_Init(void)
 284:Core/Src/main.c **** {
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 291:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Initialize RTC Only
 298:Core/Src/main.c ****    */
 299:Core/Src/main.c ****   hrtc.Instance = RTC;
 300:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 301:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 302:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 303:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 304:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 305:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 306:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 316:Core/Src/main.c ****    */
ARM GAS  /tmp/ccv35OkG.s 			page 7


 317:Core/Src/main.c ****   sTime.Hours = 0x0;
 318:Core/Src/main.c ****   sTime.Minutes = 0x0;
 319:Core/Src/main.c ****   sTime.Seconds = 0x0;
 320:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 321:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 322:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 327:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 328:Core/Src/main.c ****   sDate.Date = 0x1;
 329:Core/Src/main.c ****   sDate.Year = 0x0;
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 338:Core/Src/main.c **** }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** /**
 341:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 342:Core/Src/main.c ****  * @param None
 343:Core/Src/main.c ****  * @retval None
 344:Core/Src/main.c ****  */
 345:Core/Src/main.c **** static void MX_SPI1_Init(void)
 346:Core/Src/main.c **** {
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 355:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 356:Core/Src/main.c ****   hspi1.Instance = SPI1;
 357:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 358:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 359:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 360:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 361:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 362:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 363:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 364:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 365:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 366:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 367:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 368:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 373:Core/Src/main.c **** 
ARM GAS  /tmp/ccv35OkG.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****  * @brief USART1 Initialization Function
 379:Core/Src/main.c ****  * @param None
 380:Core/Src/main.c ****  * @retval None
 381:Core/Src/main.c ****  */
 382:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 392:Core/Src/main.c ****   huart1.Instance = USART1;
 393:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 394:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 395:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 396:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 397:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 398:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 399:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 400:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 407:Core/Src/main.c **** }
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****  * @brief USART2 Initialization Function
 411:Core/Src/main.c ****  * @param None
 412:Core/Src/main.c ****  * @retval None
 413:Core/Src/main.c ****  */
 414:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 415:Core/Src/main.c **** {
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 424:Core/Src/main.c ****   huart2.Instance = USART2;
 425:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 426:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 427:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 428:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 429:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 430:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccv35OkG.s 			page 9


 431:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 432:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 433:Core/Src/main.c ****   {
 434:Core/Src/main.c ****     Error_Handler();
 435:Core/Src/main.c ****   }
 436:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 439:Core/Src/main.c **** }
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /**
 442:Core/Src/main.c ****  * Enable DMA controller clock
 443:Core/Src/main.c ****  */
 444:Core/Src/main.c **** static void MX_DMA_Init(void)
 445:Core/Src/main.c **** {
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* DMA controller clock enable */
 448:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 449:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* DMA interrupt init */
 452:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 453:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 454:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 455:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 456:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 457:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 458:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 459:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 460:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 461:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 462:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 463:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 464:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 465:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 466:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 467:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 468:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 469:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 470:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 471:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
 472:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 473:Core/Src/main.c **** }
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** /**
 476:Core/Src/main.c ****  * @brief GPIO Initialization Function
 477:Core/Src/main.c ****  * @param None
 478:Core/Src/main.c ****  * @retval None
 479:Core/Src/main.c ****  */
 480:Core/Src/main.c **** static void MX_GPIO_Init(void)
 481:Core/Src/main.c **** {
  28              		.loc 1 481 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
ARM GAS  /tmp/ccv35OkG.s 			page 10


  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
 482:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 482 3 view .LVU1
  46              		.loc 1 482 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 483:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 484:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 487:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 487 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 487 3 view .LVU4
  56 0012 0094     		str	r4, [sp]
  57              		.loc 1 487 3 view .LVU5
  58 0014 474B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
  60 0018 42F00402 		orr	r2, r2, #4
  61 001c 1A63     		str	r2, [r3, #48]
  62              		.loc 1 487 3 view .LVU6
  63 001e 1A6B     		ldr	r2, [r3, #48]
  64 0020 02F00402 		and	r2, r2, #4
  65 0024 0092     		str	r2, [sp]
  66              		.loc 1 487 3 view .LVU7
  67 0026 009A     		ldr	r2, [sp]
  68              	.LBE4:
  69              		.loc 1 487 3 view .LVU8
 488:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 488 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 488 3 view .LVU10
  73 0028 0194     		str	r4, [sp, #4]
  74              		.loc 1 488 3 view .LVU11
  75 002a 1A6B     		ldr	r2, [r3, #48]
  76 002c 42F08002 		orr	r2, r2, #128
  77 0030 1A63     		str	r2, [r3, #48]
  78              		.loc 1 488 3 view .LVU12
  79 0032 1A6B     		ldr	r2, [r3, #48]
  80 0034 02F08002 		and	r2, r2, #128
  81 0038 0192     		str	r2, [sp, #4]
  82              		.loc 1 488 3 view .LVU13
  83 003a 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccv35OkG.s 			page 11


  84              	.LBE5:
  85              		.loc 1 488 3 view .LVU14
 489:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  86              		.loc 1 489 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 489 3 view .LVU16
  89 003c 0294     		str	r4, [sp, #8]
  90              		.loc 1 489 3 view .LVU17
  91 003e 1A6B     		ldr	r2, [r3, #48]
  92 0040 42F00102 		orr	r2, r2, #1
  93 0044 1A63     		str	r2, [r3, #48]
  94              		.loc 1 489 3 view .LVU18
  95 0046 1A6B     		ldr	r2, [r3, #48]
  96 0048 02F00102 		and	r2, r2, #1
  97 004c 0292     		str	r2, [sp, #8]
  98              		.loc 1 489 3 view .LVU19
  99 004e 029A     		ldr	r2, [sp, #8]
 100              	.LBE6:
 101              		.loc 1 489 3 view .LVU20
 490:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 490 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 490 3 view .LVU22
 105 0050 0394     		str	r4, [sp, #12]
 106              		.loc 1 490 3 view .LVU23
 107 0052 1A6B     		ldr	r2, [r3, #48]
 108 0054 42F00202 		orr	r2, r2, #2
 109 0058 1A63     		str	r2, [r3, #48]
 110              		.loc 1 490 3 view .LVU24
 111 005a 1A6B     		ldr	r2, [r3, #48]
 112 005c 02F00202 		and	r2, r2, #2
 113 0060 0392     		str	r2, [sp, #12]
 114              		.loc 1 490 3 view .LVU25
 115 0062 039A     		ldr	r2, [sp, #12]
 116              	.LBE7:
 117              		.loc 1 490 3 view .LVU26
 491:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 118              		.loc 1 491 3 view .LVU27
 119              	.LBB8:
 120              		.loc 1 491 3 view .LVU28
 121 0064 0494     		str	r4, [sp, #16]
 122              		.loc 1 491 3 view .LVU29
 123 0066 1A6B     		ldr	r2, [r3, #48]
 124 0068 42F00802 		orr	r2, r2, #8
 125 006c 1A63     		str	r2, [r3, #48]
 126              		.loc 1 491 3 view .LVU30
 127 006e 1B6B     		ldr	r3, [r3, #48]
 128 0070 03F00803 		and	r3, r3, #8
 129 0074 0493     		str	r3, [sp, #16]
 130              		.loc 1 491 3 view .LVU31
 131 0076 049B     		ldr	r3, [sp, #16]
 132              	.LBE8:
 133              		.loc 1 491 3 view .LVU32
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 494:Core/Src/main.c ****   HAL_GPIO_WritePin(GPS_RST_GPIO_Port, GPS_RST_Pin, GPIO_PIN_RESET);
 134              		.loc 1 494 3 view .LVU33
ARM GAS  /tmp/ccv35OkG.s 			page 12


 135 0078 DFF8C480 		ldr	r8, .L3+12
 136 007c 2246     		mov	r2, r4
 137 007e 4FF40051 		mov	r1, #8192
 138 0082 4046     		mov	r0, r8
 139 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 140              	.LVL0:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 497:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TIMEPULSE_Pin | SAFEBOOT_Pin, GPIO_PIN_RESET);
 141              		.loc 1 497 3 view .LVU34
 142 0088 2B4F     		ldr	r7, .L3+4
 143 008a 2246     		mov	r2, r4
 144 008c 6021     		movs	r1, #96
 145 008e 3846     		mov	r0, r7
 146 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL1:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 500:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, USR_LED1_Pin | USR_LED2_Pin, GPIO_PIN_RESET);
 148              		.loc 1 500 3 view .LVU35
 149 0094 294E     		ldr	r6, .L3+8
 150 0096 2246     		mov	r2, r4
 151 0098 0321     		movs	r1, #3
 152 009a 3046     		mov	r0, r6
 153 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL2:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 503:Core/Src/main.c ****   HAL_GPIO_WritePin(BMP_CS_GPIO_Port, BMP_CS_Pin, GPIO_PIN_SET);
 155              		.loc 1 503 3 view .LVU36
 156 00a0 DFF8A090 		ldr	r9, .L3+16
 157 00a4 0122     		movs	r2, #1
 158 00a6 0421     		movs	r1, #4
 159 00a8 4846     		mov	r0, r9
 160 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL3:
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /*Configure GPIO pin : GPS_RST_Pin */
 506:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPS_RST_Pin;
 162              		.loc 1 506 3 view .LVU37
 163              		.loc 1 506 23 is_stmt 0 view .LVU38
 164 00ae 4FF40053 		mov	r3, #8192
 165 00b2 0593     		str	r3, [sp, #20]
 507:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 166              		.loc 1 507 3 is_stmt 1 view .LVU39
 167              		.loc 1 507 24 is_stmt 0 view .LVU40
 168 00b4 0125     		movs	r5, #1
 169 00b6 0695     		str	r5, [sp, #24]
 508:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 508 3 is_stmt 1 view .LVU41
 171              		.loc 1 508 24 is_stmt 0 view .LVU42
 172 00b8 0794     		str	r4, [sp, #28]
 509:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 173              		.loc 1 509 3 is_stmt 1 view .LVU43
 174              		.loc 1 509 25 is_stmt 0 view .LVU44
 175 00ba 0894     		str	r4, [sp, #32]
 510:Core/Src/main.c ****   HAL_GPIO_Init(GPS_RST_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccv35OkG.s 			page 13


 176              		.loc 1 510 3 is_stmt 1 view .LVU45
 177 00bc 05A9     		add	r1, sp, #20
 178 00be 4046     		mov	r0, r8
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL4:
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /*Configure GPIO pin : PC14 */
 513:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 181              		.loc 1 513 3 view .LVU46
 182              		.loc 1 513 23 is_stmt 0 view .LVU47
 183 00c4 4FF48043 		mov	r3, #16384
 184 00c8 0593     		str	r3, [sp, #20]
 514:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 185              		.loc 1 514 3 is_stmt 1 view .LVU48
 186              		.loc 1 514 24 is_stmt 0 view .LVU49
 187 00ca 0694     		str	r4, [sp, #24]
 515:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 515 3 is_stmt 1 view .LVU50
 189              		.loc 1 515 24 is_stmt 0 view .LVU51
 190 00cc 0794     		str	r4, [sp, #28]
 516:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 191              		.loc 1 516 3 is_stmt 1 view .LVU52
 192 00ce 05A9     		add	r1, sp, #20
 193 00d0 4046     		mov	r0, r8
 194 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 195              	.LVL5:
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /*Configure GPIO pin : GPS_INT_Pin */
 519:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPS_INT_Pin;
 196              		.loc 1 519 3 view .LVU53
 197              		.loc 1 519 23 is_stmt 0 view .LVU54
 198 00d6 0223     		movs	r3, #2
 199 00d8 0593     		str	r3, [sp, #20]
 520:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 200              		.loc 1 520 3 is_stmt 1 view .LVU55
 201              		.loc 1 520 24 is_stmt 0 view .LVU56
 202 00da 0694     		str	r4, [sp, #24]
 521:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 521 3 is_stmt 1 view .LVU57
 204              		.loc 1 521 24 is_stmt 0 view .LVU58
 205 00dc 0794     		str	r4, [sp, #28]
 522:Core/Src/main.c ****   HAL_GPIO_Init(GPS_INT_GPIO_Port, &GPIO_InitStruct);
 206              		.loc 1 522 3 is_stmt 1 view .LVU59
 207 00de 05A9     		add	r1, sp, #20
 208 00e0 3846     		mov	r0, r7
 209 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 210              	.LVL6:
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /*Configure GPIO pins : TIMEPULSE_Pin SAFEBOOT_Pin */
 525:Core/Src/main.c ****   GPIO_InitStruct.Pin = TIMEPULSE_Pin | SAFEBOOT_Pin;
 211              		.loc 1 525 3 view .LVU60
 212              		.loc 1 525 23 is_stmt 0 view .LVU61
 213 00e6 6023     		movs	r3, #96
 214 00e8 0593     		str	r3, [sp, #20]
 526:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 215              		.loc 1 526 3 is_stmt 1 view .LVU62
 216              		.loc 1 526 24 is_stmt 0 view .LVU63
ARM GAS  /tmp/ccv35OkG.s 			page 14


 217 00ea 0695     		str	r5, [sp, #24]
 527:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 218              		.loc 1 527 3 is_stmt 1 view .LVU64
 219              		.loc 1 527 24 is_stmt 0 view .LVU65
 220 00ec 0794     		str	r4, [sp, #28]
 528:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 221              		.loc 1 528 3 is_stmt 1 view .LVU66
 222              		.loc 1 528 25 is_stmt 0 view .LVU67
 223 00ee 0894     		str	r4, [sp, #32]
 529:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 224              		.loc 1 529 3 is_stmt 1 view .LVU68
 225 00f0 05A9     		add	r1, sp, #20
 226 00f2 3846     		mov	r0, r7
 227 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 228              	.LVL7:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /*Configure GPIO pins : USR_LED1_Pin USR_LED2_Pin */
 532:Core/Src/main.c ****   GPIO_InitStruct.Pin = USR_LED1_Pin | USR_LED2_Pin;
 229              		.loc 1 532 3 view .LVU69
 230              		.loc 1 532 23 is_stmt 0 view .LVU70
 231 00f8 0323     		movs	r3, #3
 232 00fa 0593     		str	r3, [sp, #20]
 533:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 233              		.loc 1 533 3 is_stmt 1 view .LVU71
 234              		.loc 1 533 24 is_stmt 0 view .LVU72
 235 00fc 0695     		str	r5, [sp, #24]
 534:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 534 3 is_stmt 1 view .LVU73
 237              		.loc 1 534 24 is_stmt 0 view .LVU74
 238 00fe 0794     		str	r4, [sp, #28]
 535:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 239              		.loc 1 535 3 is_stmt 1 view .LVU75
 240              		.loc 1 535 25 is_stmt 0 view .LVU76
 241 0100 0894     		str	r4, [sp, #32]
 536:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 242              		.loc 1 536 3 is_stmt 1 view .LVU77
 243 0102 05A9     		add	r1, sp, #20
 244 0104 3046     		mov	r0, r6
 245 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL8:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /*Configure GPIO pins : PB12 PB13 */
 539:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_13;
 247              		.loc 1 539 3 view .LVU78
 248              		.loc 1 539 23 is_stmt 0 view .LVU79
 249 010a 4FF44053 		mov	r3, #12288
 250 010e 0593     		str	r3, [sp, #20]
 540:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 251              		.loc 1 540 3 is_stmt 1 view .LVU80
 252              		.loc 1 540 24 is_stmt 0 view .LVU81
 253 0110 0694     		str	r4, [sp, #24]
 541:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 254              		.loc 1 541 3 is_stmt 1 view .LVU82
 255              		.loc 1 541 24 is_stmt 0 view .LVU83
 256 0112 0794     		str	r4, [sp, #28]
 542:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 257              		.loc 1 542 3 is_stmt 1 view .LVU84
ARM GAS  /tmp/ccv35OkG.s 			page 15


 258 0114 05A9     		add	r1, sp, #20
 259 0116 3046     		mov	r0, r6
 260 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 261              	.LVL9:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /*Configure GPIO pin : BMP_CS_Pin */
 545:Core/Src/main.c ****   GPIO_InitStruct.Pin = BMP_CS_Pin;
 262              		.loc 1 545 3 view .LVU85
 263              		.loc 1 545 23 is_stmt 0 view .LVU86
 264 011c 0423     		movs	r3, #4
 265 011e 0593     		str	r3, [sp, #20]
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 266              		.loc 1 546 3 is_stmt 1 view .LVU87
 267              		.loc 1 546 24 is_stmt 0 view .LVU88
 268 0120 0695     		str	r5, [sp, #24]
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 269              		.loc 1 547 3 is_stmt 1 view .LVU89
 270              		.loc 1 547 24 is_stmt 0 view .LVU90
 271 0122 0794     		str	r4, [sp, #28]
 548:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 272              		.loc 1 548 3 is_stmt 1 view .LVU91
 273              		.loc 1 548 25 is_stmt 0 view .LVU92
 274 0124 0894     		str	r4, [sp, #32]
 549:Core/Src/main.c ****   HAL_GPIO_Init(BMP_CS_GPIO_Port, &GPIO_InitStruct);
 275              		.loc 1 549 3 is_stmt 1 view .LVU93
 276 0126 05A9     		add	r1, sp, #20
 277 0128 4846     		mov	r0, r9
 278 012a FFF7FEFF 		bl	HAL_GPIO_Init
 279              	.LVL10:
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 552:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 553:Core/Src/main.c **** }
 280              		.loc 1 553 1 is_stmt 0 view .LVU94
 281 012e 0BB0     		add	sp, sp, #44
 282              	.LCFI2:
 283              		.cfi_def_cfa_offset 28
 284              		@ sp needed
 285 0130 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 286              	.L4:
 287              		.align	2
 288              	.L3:
 289 0134 00380240 		.word	1073887232
 290 0138 00000240 		.word	1073872896
 291 013c 00040240 		.word	1073873920
 292 0140 00080240 		.word	1073874944
 293 0144 000C0240 		.word	1073875968
 294              		.cfi_endproc
 295              	.LFE141:
 297              		.section	.text.MX_DMA_Init,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	MX_DMA_Init:
 304              	.LFB140:
 445:Core/Src/main.c **** 
ARM GAS  /tmp/ccv35OkG.s 			page 16


 305              		.loc 1 445 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 10B5     		push	{r4, lr}
 310              	.LCFI3:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 16
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 317              		.loc 1 448 3 view .LVU96
 318              	.LBB9:
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 319              		.loc 1 448 3 view .LVU97
 320 0004 0024     		movs	r4, #0
 321 0006 0094     		str	r4, [sp]
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 322              		.loc 1 448 3 view .LVU98
 323 0008 264B     		ldr	r3, .L7
 324 000a 1A6B     		ldr	r2, [r3, #48]
 325 000c 42F40012 		orr	r2, r2, #2097152
 326 0010 1A63     		str	r2, [r3, #48]
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 327              		.loc 1 448 3 view .LVU99
 328 0012 1A6B     		ldr	r2, [r3, #48]
 329 0014 02F40012 		and	r2, r2, #2097152
 330 0018 0092     		str	r2, [sp]
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 331              		.loc 1 448 3 view .LVU100
 332 001a 009A     		ldr	r2, [sp]
 333              	.LBE9:
 448:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 334              		.loc 1 448 3 view .LVU101
 449:Core/Src/main.c **** 
 335              		.loc 1 449 3 view .LVU102
 336              	.LBB10:
 449:Core/Src/main.c **** 
 337              		.loc 1 449 3 view .LVU103
 338 001c 0194     		str	r4, [sp, #4]
 449:Core/Src/main.c **** 
 339              		.loc 1 449 3 view .LVU104
 340 001e 1A6B     		ldr	r2, [r3, #48]
 341 0020 42F48002 		orr	r2, r2, #4194304
 342 0024 1A63     		str	r2, [r3, #48]
 449:Core/Src/main.c **** 
 343              		.loc 1 449 3 view .LVU105
 344 0026 1B6B     		ldr	r3, [r3, #48]
 345 0028 03F48003 		and	r3, r3, #4194304
 346 002c 0193     		str	r3, [sp, #4]
 449:Core/Src/main.c **** 
 347              		.loc 1 449 3 view .LVU106
 348 002e 019B     		ldr	r3, [sp, #4]
 349              	.LBE10:
 449:Core/Src/main.c **** 
ARM GAS  /tmp/ccv35OkG.s 			page 17


 350              		.loc 1 449 3 view .LVU107
 453:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 351              		.loc 1 453 3 view .LVU108
 352 0030 2246     		mov	r2, r4
 353 0032 2146     		mov	r1, r4
 354 0034 0C20     		movs	r0, #12
 355 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 356              	.LVL11:
 454:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 357              		.loc 1 454 3 view .LVU109
 358 003a 0C20     		movs	r0, #12
 359 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 360              	.LVL12:
 456:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 361              		.loc 1 456 3 view .LVU110
 362 0040 2246     		mov	r2, r4
 363 0042 2146     		mov	r1, r4
 364 0044 0F20     		movs	r0, #15
 365 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 366              	.LVL13:
 457:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 367              		.loc 1 457 3 view .LVU111
 368 004a 0F20     		movs	r0, #15
 369 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 370              	.LVL14:
 459:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 371              		.loc 1 459 3 view .LVU112
 372 0050 2246     		mov	r2, r4
 373 0052 2146     		mov	r1, r4
 374 0054 1020     		movs	r0, #16
 375 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 376              	.LVL15:
 460:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 377              		.loc 1 460 3 view .LVU113
 378 005a 1020     		movs	r0, #16
 379 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 380              	.LVL16:
 462:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 381              		.loc 1 462 3 view .LVU114
 382 0060 2246     		mov	r2, r4
 383 0062 2146     		mov	r1, r4
 384 0064 1120     		movs	r0, #17
 385 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 386              	.LVL17:
 463:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 387              		.loc 1 463 3 view .LVU115
 388 006a 1120     		movs	r0, #17
 389 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 390              	.LVL18:
 465:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 391              		.loc 1 465 3 view .LVU116
 392 0070 2246     		mov	r2, r4
 393 0072 2146     		mov	r1, r4
 394 0074 3820     		movs	r0, #56
 395 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 396              	.LVL19:
 466:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
ARM GAS  /tmp/ccv35OkG.s 			page 18


 397              		.loc 1 466 3 view .LVU117
 398 007a 3820     		movs	r0, #56
 399 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 400              	.LVL20:
 468:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 401              		.loc 1 468 3 view .LVU118
 402 0080 2246     		mov	r2, r4
 403 0082 2146     		mov	r1, r4
 404 0084 3B20     		movs	r0, #59
 405 0086 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 406              	.LVL21:
 469:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 407              		.loc 1 469 3 view .LVU119
 408 008a 3B20     		movs	r0, #59
 409 008c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 410              	.LVL22:
 471:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 411              		.loc 1 471 3 view .LVU120
 412 0090 2246     		mov	r2, r4
 413 0092 2146     		mov	r1, r4
 414 0094 4620     		movs	r0, #70
 415 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 416              	.LVL23:
 472:Core/Src/main.c **** }
 417              		.loc 1 472 3 view .LVU121
 418 009a 4620     		movs	r0, #70
 419 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 420              	.LVL24:
 473:Core/Src/main.c **** 
 421              		.loc 1 473 1 is_stmt 0 view .LVU122
 422 00a0 02B0     		add	sp, sp, #8
 423              	.LCFI5:
 424              		.cfi_def_cfa_offset 8
 425              		@ sp needed
 426 00a2 10BD     		pop	{r4, pc}
 427              	.L8:
 428              		.align	2
 429              	.L7:
 430 00a4 00380240 		.word	1073887232
 431              		.cfi_endproc
 432              	.LFE140:
 434              		.section	.rodata.i2c_scan.str1.4,"aMS",%progbits,1
 435              		.align	2
 436              	.LC2:
 437 0000 30782558 		.ascii	"0x%X\015\012\000"
 437      0D0A00
 438 0007 00       		.align	2
 439              	.LC0:
 440 0008 53746172 		.ascii	"Starting I2C Scanning: \015\012\000"
 440      74696E67 
 440      20493243 
 440      20536361 
 440      6E6E696E 
 441 0022 0000     		.align	2
 442              	.LC1:
 443 0024 446F6E65 		.ascii	"Done! \015\012\015\012\000"
 443      21200D0A 
ARM GAS  /tmp/ccv35OkG.s 			page 19


 443      0D0A00
 444              		.section	.text.i2c_scan,"ax",%progbits
 445              		.align	1
 446              		.global	i2c_scan
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	i2c_scan:
 452              	.LFB130:
  82:Core/Src/main.c ****   uint8_t Buffer[25] = {0};
 453              		.loc 1 82 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 72
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 30B5     		push	{r4, r5, lr}
 458              	.LCFI6:
 459              		.cfi_def_cfa_offset 12
 460              		.cfi_offset 4, -12
 461              		.cfi_offset 5, -8
 462              		.cfi_offset 14, -4
 463 0002 93B0     		sub	sp, sp, #76
 464              	.LCFI7:
 465              		.cfi_def_cfa_offset 88
  83:Core/Src/main.c ****   uint8_t Space[] = " - ";
 466              		.loc 1 83 3 view .LVU124
  83:Core/Src/main.c ****   uint8_t Space[] = " - ";
 467              		.loc 1 83 11 is_stmt 0 view .LVU125
 468 0004 0023     		movs	r3, #0
 469 0006 0B93     		str	r3, [sp, #44]
 470 0008 0C93     		str	r3, [sp, #48]
 471 000a 0D93     		str	r3, [sp, #52]
 472 000c 0E93     		str	r3, [sp, #56]
 473 000e 0F93     		str	r3, [sp, #60]
 474 0010 1093     		str	r3, [sp, #64]
 475 0012 8DF84430 		strb	r3, [sp, #68]
  84:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
 476              		.loc 1 84 3 is_stmt 1 view .LVU126
  84:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
 477              		.loc 1 84 11 is_stmt 0 view .LVU127
 478 0016 224B     		ldr	r3, .L16
 479 0018 0A93     		str	r3, [sp, #40]
  85:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
 480              		.loc 1 85 3 is_stmt 1 view .LVU128
  85:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
 481              		.loc 1 85 11 is_stmt 0 view .LVU129
 482 001a 03AC     		add	r4, sp, #12
 483 001c 214D     		ldr	r5, .L16+4
 484 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 485 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 486 0022 95E80700 		ldm	r5, {r0, r1, r2}
 487 0026 03C4     		stmia	r4!, {r0, r1}
 488 0028 2280     		strh	r2, [r4]	@ movhi
  86:Core/Src/main.c **** 
 489              		.loc 1 86 3 is_stmt 1 view .LVU130
  86:Core/Src/main.c **** 
 490              		.loc 1 86 11 is_stmt 0 view .LVU131
 491 002a 1F4A     		ldr	r2, .L16+8
ARM GAS  /tmp/ccv35OkG.s 			page 20


 492 002c 6B46     		mov	r3, sp
 493 002e 07CA     		ldm	r2, {r0, r1, r2}
 494 0030 03C3     		stmia	r3!, {r0, r1}
 495 0032 23F8022B 		strh	r2, [r3], #2	@ movhi
 496 0036 120C     		lsrs	r2, r2, #16
 497 0038 1A70     		strb	r2, [r3]
  89:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, StartMSG, sizeof(StartMSG), HAL_MAX_DELAY);
 498              		.loc 1 89 3 is_stmt 1 view .LVU132
  90:Core/Src/main.c ****   for (uint8_t i = 1; i < 128; i++)
 499              		.loc 1 90 3 view .LVU133
 500 003a 4FF0FF33 		mov	r3, #-1
 501 003e 1A22     		movs	r2, #26
 502 0040 03A9     		add	r1, sp, #12
 503 0042 1A48     		ldr	r0, .L16+12
 504 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 505              	.LVL25:
  91:Core/Src/main.c ****   {
 506              		.loc 1 91 3 view .LVU134
 507              	.LBB11:
  91:Core/Src/main.c ****   {
 508              		.loc 1 91 8 view .LVU135
  91:Core/Src/main.c ****   {
 509              		.loc 1 91 16 is_stmt 0 view .LVU136
 510 0048 0124     		movs	r4, #1
  91:Core/Src/main.c ****   {
 511              		.loc 1 91 3 view .LVU137
 512 004a 0DE0     		b	.L10
 513              	.LVL26:
 514              	.L11:
  98:Core/Src/main.c ****     {
 515              		.loc 1 98 10 is_stmt 1 view .LVU138
 516              	.LBB12:
 100:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 517              		.loc 1 100 7 view .LVU139
 518 004c 2246     		mov	r2, r4
 519 004e 1849     		ldr	r1, .L16+16
 520 0050 0BA8     		add	r0, sp, #44
 521              	.LVL27:
 100:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 522              		.loc 1 100 7 is_stmt 0 view .LVU140
 523 0052 FFF7FEFF 		bl	sprintf
 524              	.LVL28:
 101:Core/Src/main.c ****     }
 525              		.loc 1 101 7 is_stmt 1 view .LVU141
 526 0056 4FF0FF33 		mov	r3, #-1
 527 005a 1922     		movs	r2, #25
 528 005c 0BA9     		add	r1, sp, #44
 529 005e 1348     		ldr	r0, .L16+12
 530 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 531              	.LVL29:
 532              	.L12:
 533              	.LBE12:
  91:Core/Src/main.c ****   {
 534              		.loc 1 91 32 discriminator 2 view .LVU142
  91:Core/Src/main.c ****   {
 535              		.loc 1 91 33 is_stmt 0 discriminator 2 view .LVU143
 536 0064 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccv35OkG.s 			page 21


 537              	.LVL30:
  91:Core/Src/main.c ****   {
 538              		.loc 1 91 33 discriminator 2 view .LVU144
 539 0066 E4B2     		uxtb	r4, r4
 540              	.LVL31:
 541              	.L10:
  91:Core/Src/main.c ****   {
 542              		.loc 1 91 23 is_stmt 1 discriminator 1 view .LVU145
  91:Core/Src/main.c ****   {
 543              		.loc 1 91 3 is_stmt 0 discriminator 1 view .LVU146
 544 0068 14F0800F 		tst	r4, #128
 545 006c 0FD1     		bne	.L15
  93:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
 546              		.loc 1 93 5 is_stmt 1 view .LVU147
  93:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
 547              		.loc 1 93 11 is_stmt 0 view .LVU148
 548 006e 0523     		movs	r3, #5
 549 0070 0322     		movs	r2, #3
 550 0072 6100     		lsls	r1, r4, #1
 551 0074 0F48     		ldr	r0, .L16+20
 552 0076 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 553              	.LVL32:
  94:Core/Src/main.c ****     {
 554              		.loc 1 94 5 is_stmt 1 view .LVU149
  94:Core/Src/main.c ****     {
 555              		.loc 1 94 8 is_stmt 0 view .LVU150
 556 007a 0028     		cmp	r0, #0
 557 007c E6D0     		beq	.L11
  96:Core/Src/main.c ****     }
 558              		.loc 1 96 7 is_stmt 1 view .LVU151
 559 007e 4FF0FF33 		mov	r3, #-1
 560 0082 0422     		movs	r2, #4
 561 0084 0AA9     		add	r1, sp, #40
 562 0086 0948     		ldr	r0, .L16+12
 563              	.LVL33:
  96:Core/Src/main.c ****     }
 564              		.loc 1 96 7 is_stmt 0 view .LVU152
 565 0088 FFF7FEFF 		bl	HAL_UART_Transmit
 566              	.LVL34:
 567 008c EAE7     		b	.L12
 568              	.L15:
  96:Core/Src/main.c ****     }
 569              		.loc 1 96 7 view .LVU153
 570              	.LBE11:
 104:Core/Src/main.c ****   /*--[ Scanning Done ]--*/
 571              		.loc 1 104 3 is_stmt 1 view .LVU154
 572 008e 4FF0FF33 		mov	r3, #-1
 573 0092 0B22     		movs	r2, #11
 574 0094 6946     		mov	r1, sp
 575 0096 0548     		ldr	r0, .L16+12
 576 0098 FFF7FEFF 		bl	HAL_UART_Transmit
 577              	.LVL35:
 106:Core/Src/main.c **** void print_bmp280_id()
 578              		.loc 1 106 1 is_stmt 0 view .LVU155
 579 009c 13B0     		add	sp, sp, #76
 580              	.LCFI8:
 581              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccv35OkG.s 			page 22


 582              		@ sp needed
 583 009e 30BD     		pop	{r4, r5, pc}
 584              	.LVL36:
 585              	.L17:
 106:Core/Src/main.c **** void print_bmp280_id()
 586              		.loc 1 106 1 view .LVU156
 587              		.align	2
 588              	.L16:
 589 00a0 202D2000 		.word	2108704
 590 00a4 08000000 		.word	.LC0
 591 00a8 24000000 		.word	.LC1
 592 00ac 00000000 		.word	.LANCHOR0
 593 00b0 00000000 		.word	.LC2
 594 00b4 00000000 		.word	.LANCHOR1
 595              		.cfi_endproc
 596              	.LFE130:
 598              		.section	.rodata.print_bmp280_id.str1.4,"aMS",%progbits,1
 599              		.align	2
 600              	.LC3:
 601 0000 424D5032 		.ascii	"BMP280 ID:%02X\015\012\000"
 601      38302049 
 601      443A2530 
 601      32580D0A 
 601      00
 602              		.section	.text.print_bmp280_id,"ax",%progbits
 603              		.align	1
 604              		.global	print_bmp280_id
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	print_bmp280_id:
 610              	.LFB131:
 108:Core/Src/main.c ****   uint8_t id;
 611              		.loc 1 108 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 24
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615 0000 00B5     		push	{lr}
 616              	.LCFI9:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 14, -4
 619 0002 87B0     		sub	sp, sp, #28
 620              	.LCFI10:
 621              		.cfi_def_cfa_offset 32
 109:Core/Src/main.c ****   uint8_t ret = bmp280_getid(&id);
 622              		.loc 1 109 3 view .LVU158
 110:Core/Src/main.c **** 
 623              		.loc 1 110 3 view .LVU159
 110:Core/Src/main.c **** 
 624              		.loc 1 110 17 is_stmt 0 view .LVU160
 625 0004 0DF11700 		add	r0, sp, #23
 626 0008 FFF7FEFF 		bl	bmp280_getid
 627              	.LVL37:
 112:Core/Src/main.c **** 
 628              		.loc 1 112 3 is_stmt 1 view .LVU161
 112:Core/Src/main.c **** 
 629              		.loc 1 112 11 is_stmt 0 view .LVU162
ARM GAS  /tmp/ccv35OkG.s 			page 23


 630 000c 0023     		movs	r3, #0
 631 000e 0193     		str	r3, [sp, #4]
 632 0010 0293     		str	r3, [sp, #8]
 633 0012 0393     		str	r3, [sp, #12]
 634 0014 0493     		str	r3, [sp, #16]
 114:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, sizeof(buf), 10000);
 635              		.loc 1 114 3 is_stmt 1 view .LVU163
 636 0016 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 637 001a 074A     		ldr	r2, .L20
 638 001c 1021     		movs	r1, #16
 639 001e 01A8     		add	r0, sp, #4
 640 0020 FFF7FEFF 		bl	snprintf
 641              	.LVL38:
 115:Core/Src/main.c **** }
 642              		.loc 1 115 3 view .LVU164
 643 0024 42F21073 		movw	r3, #10000
 644 0028 1022     		movs	r2, #16
 645 002a 01A9     		add	r1, sp, #4
 646 002c 0348     		ldr	r0, .L20+4
 647 002e FFF7FEFF 		bl	HAL_UART_Transmit
 648              	.LVL39:
 116:Core/Src/main.c **** /* USER CODE END 0 */
 649              		.loc 1 116 1 is_stmt 0 view .LVU165
 650 0032 07B0     		add	sp, sp, #28
 651              	.LCFI11:
 652              		.cfi_def_cfa_offset 4
 653              		@ sp needed
 654 0034 5DF804FB 		ldr	pc, [sp], #4
 655              	.L21:
 656              		.align	2
 657              	.L20:
 658 0038 00000000 		.word	.LC3
 659 003c 00000000 		.word	.LANCHOR0
 660              		.cfi_endproc
 661              	.LFE131:
 663              		.section	.text.Error_Handler,"ax",%progbits
 664              		.align	1
 665              		.global	Error_Handler
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	Error_Handler:
 671              	.LFB142:
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** /* USER CODE END 4 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /**
 560:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 561:Core/Src/main.c ****  * @retval None
 562:Core/Src/main.c ****  */
 563:Core/Src/main.c **** void Error_Handler(void)
 564:Core/Src/main.c **** {
 672              		.loc 1 564 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ Volatile: function does not return.
ARM GAS  /tmp/ccv35OkG.s 			page 24


 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 565:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 566:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 567:Core/Src/main.c ****   __disable_irq();
 678              		.loc 1 567 3 view .LVU167
 679              	.LBB13:
 680              	.LBI13:
 681              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/ccv35OkG.s 			page 25


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccv35OkG.s 			page 26


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 682              		.loc 2 140 27 view .LVU168
 683              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 684              		.loc 2 142 3 view .LVU169
 685              		.syntax unified
 686              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 687 0000 72B6     		cpsid i
 688              	@ 0 "" 2
 689              		.thumb
 690              		.syntax unified
 691              	.L23:
 692              	.LBE14:
 693              	.LBE13:
 568:Core/Src/main.c ****   while (1)
 694              		.loc 1 568 3 discriminator 1 view .LVU170
 569:Core/Src/main.c ****   {
 570:Core/Src/main.c ****   }
 695              		.loc 1 570 3 discriminator 1 view .LVU171
 568:Core/Src/main.c ****   while (1)
 696              		.loc 1 568 9 discriminator 1 view .LVU172
ARM GAS  /tmp/ccv35OkG.s 			page 27


 697 0002 FEE7     		b	.L23
 698              		.cfi_endproc
 699              	.LFE142:
 701              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 702              		.align	1
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 707              	MX_USART2_UART_Init:
 708              	.LFB139:
 415:Core/Src/main.c **** 
 709              		.loc 1 415 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713 0000 08B5     		push	{r3, lr}
 714              	.LCFI12:
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 3, -8
 717              		.cfi_offset 14, -4
 424:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 718              		.loc 1 424 3 view .LVU174
 424:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 719              		.loc 1 424 19 is_stmt 0 view .LVU175
 720 0002 0A48     		ldr	r0, .L28
 721 0004 0A4B     		ldr	r3, .L28+4
 722 0006 0360     		str	r3, [r0]
 425:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 723              		.loc 1 425 3 is_stmt 1 view .LVU176
 425:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 724              		.loc 1 425 24 is_stmt 0 view .LVU177
 725 0008 4FF4E133 		mov	r3, #115200
 726 000c 4360     		str	r3, [r0, #4]
 426:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 727              		.loc 1 426 3 is_stmt 1 view .LVU178
 426:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 728              		.loc 1 426 26 is_stmt 0 view .LVU179
 729 000e 0023     		movs	r3, #0
 730 0010 8360     		str	r3, [r0, #8]
 427:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 731              		.loc 1 427 3 is_stmt 1 view .LVU180
 427:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 732              		.loc 1 427 24 is_stmt 0 view .LVU181
 733 0012 C360     		str	r3, [r0, #12]
 428:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 734              		.loc 1 428 3 is_stmt 1 view .LVU182
 428:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 735              		.loc 1 428 22 is_stmt 0 view .LVU183
 736 0014 0361     		str	r3, [r0, #16]
 429:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 737              		.loc 1 429 3 is_stmt 1 view .LVU184
 429:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 738              		.loc 1 429 20 is_stmt 0 view .LVU185
 739 0016 0C22     		movs	r2, #12
 740 0018 4261     		str	r2, [r0, #20]
 430:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 741              		.loc 1 430 3 is_stmt 1 view .LVU186
ARM GAS  /tmp/ccv35OkG.s 			page 28


 430:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 742              		.loc 1 430 25 is_stmt 0 view .LVU187
 743 001a 8361     		str	r3, [r0, #24]
 431:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 744              		.loc 1 431 3 is_stmt 1 view .LVU188
 431:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 745              		.loc 1 431 28 is_stmt 0 view .LVU189
 746 001c C361     		str	r3, [r0, #28]
 432:Core/Src/main.c ****   {
 747              		.loc 1 432 3 is_stmt 1 view .LVU190
 432:Core/Src/main.c ****   {
 748              		.loc 1 432 7 is_stmt 0 view .LVU191
 749 001e FFF7FEFF 		bl	HAL_UART_Init
 750              	.LVL40:
 432:Core/Src/main.c ****   {
 751              		.loc 1 432 6 view .LVU192
 752 0022 00B9     		cbnz	r0, .L27
 439:Core/Src/main.c **** 
 753              		.loc 1 439 1 view .LVU193
 754 0024 08BD     		pop	{r3, pc}
 755              	.L27:
 434:Core/Src/main.c ****   }
 756              		.loc 1 434 5 is_stmt 1 view .LVU194
 757 0026 FFF7FEFF 		bl	Error_Handler
 758              	.LVL41:
 759              	.L29:
 760 002a 00BF     		.align	2
 761              	.L28:
 762 002c 00000000 		.word	.LANCHOR2
 763 0030 00440040 		.word	1073759232
 764              		.cfi_endproc
 765              	.LFE139:
 767              		.section	.text.MX_SPI1_Init,"ax",%progbits
 768              		.align	1
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	MX_SPI1_Init:
 774              	.LFB137:
 346:Core/Src/main.c **** 
 775              		.loc 1 346 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 0000 08B5     		push	{r3, lr}
 780              	.LCFI13:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 3, -8
 783              		.cfi_offset 14, -4
 356:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 784              		.loc 1 356 3 view .LVU196
 356:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 785              		.loc 1 356 18 is_stmt 0 view .LVU197
 786 0002 0D48     		ldr	r0, .L34
 787 0004 0D4B     		ldr	r3, .L34+4
 788 0006 0360     		str	r3, [r0]
 357:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  /tmp/ccv35OkG.s 			page 29


 789              		.loc 1 357 3 is_stmt 1 view .LVU198
 357:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 790              		.loc 1 357 19 is_stmt 0 view .LVU199
 791 0008 4FF48273 		mov	r3, #260
 792 000c 4360     		str	r3, [r0, #4]
 358:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 793              		.loc 1 358 3 is_stmt 1 view .LVU200
 358:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 794              		.loc 1 358 24 is_stmt 0 view .LVU201
 795 000e 0023     		movs	r3, #0
 796 0010 8360     		str	r3, [r0, #8]
 359:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 797              		.loc 1 359 3 is_stmt 1 view .LVU202
 359:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 798              		.loc 1 359 23 is_stmt 0 view .LVU203
 799 0012 C360     		str	r3, [r0, #12]
 360:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800              		.loc 1 360 3 is_stmt 1 view .LVU204
 360:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 801              		.loc 1 360 26 is_stmt 0 view .LVU205
 802 0014 0361     		str	r3, [r0, #16]
 361:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 803              		.loc 1 361 3 is_stmt 1 view .LVU206
 361:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 804              		.loc 1 361 23 is_stmt 0 view .LVU207
 805 0016 4361     		str	r3, [r0, #20]
 362:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 806              		.loc 1 362 3 is_stmt 1 view .LVU208
 362:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 807              		.loc 1 362 18 is_stmt 0 view .LVU209
 808 0018 4FF40072 		mov	r2, #512
 809 001c 8261     		str	r2, [r0, #24]
 363:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 810              		.loc 1 363 3 is_stmt 1 view .LVU210
 363:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 811              		.loc 1 363 32 is_stmt 0 view .LVU211
 812 001e 1822     		movs	r2, #24
 813 0020 C261     		str	r2, [r0, #28]
 364:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 814              		.loc 1 364 3 is_stmt 1 view .LVU212
 364:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 815              		.loc 1 364 23 is_stmt 0 view .LVU213
 816 0022 0362     		str	r3, [r0, #32]
 365:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 817              		.loc 1 365 3 is_stmt 1 view .LVU214
 365:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 818              		.loc 1 365 21 is_stmt 0 view .LVU215
 819 0024 4362     		str	r3, [r0, #36]
 366:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 820              		.loc 1 366 3 is_stmt 1 view .LVU216
 366:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 821              		.loc 1 366 29 is_stmt 0 view .LVU217
 822 0026 8362     		str	r3, [r0, #40]
 367:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 823              		.loc 1 367 3 is_stmt 1 view .LVU218
 367:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 824              		.loc 1 367 28 is_stmt 0 view .LVU219
ARM GAS  /tmp/ccv35OkG.s 			page 30


 825 0028 0A23     		movs	r3, #10
 826 002a C362     		str	r3, [r0, #44]
 368:Core/Src/main.c ****   {
 827              		.loc 1 368 3 is_stmt 1 view .LVU220
 368:Core/Src/main.c ****   {
 828              		.loc 1 368 7 is_stmt 0 view .LVU221
 829 002c FFF7FEFF 		bl	HAL_SPI_Init
 830              	.LVL42:
 368:Core/Src/main.c ****   {
 831              		.loc 1 368 6 view .LVU222
 832 0030 00B9     		cbnz	r0, .L33
 375:Core/Src/main.c **** 
 833              		.loc 1 375 1 view .LVU223
 834 0032 08BD     		pop	{r3, pc}
 835              	.L33:
 370:Core/Src/main.c ****   }
 836              		.loc 1 370 5 is_stmt 1 view .LVU224
 837 0034 FFF7FEFF 		bl	Error_Handler
 838              	.LVL43:
 839              	.L35:
 840              		.align	2
 841              	.L34:
 842 0038 00000000 		.word	.LANCHOR3
 843 003c 00300140 		.word	1073819648
 844              		.cfi_endproc
 845              	.LFE137:
 847              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 848              		.align	1
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 853              	MX_USART1_UART_Init:
 854              	.LFB138:
 383:Core/Src/main.c **** 
 855              		.loc 1 383 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 08B5     		push	{r3, lr}
 860              	.LCFI14:
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 3, -8
 863              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 864              		.loc 1 392 3 view .LVU226
 392:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 865              		.loc 1 392 19 is_stmt 0 view .LVU227
 866 0002 0A48     		ldr	r0, .L40
 867 0004 0A4B     		ldr	r3, .L40+4
 868 0006 0360     		str	r3, [r0]
 393:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 869              		.loc 1 393 3 is_stmt 1 view .LVU228
 393:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 870              		.loc 1 393 24 is_stmt 0 view .LVU229
 871 0008 4FF4E133 		mov	r3, #115200
 872 000c 4360     		str	r3, [r0, #4]
 394:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccv35OkG.s 			page 31


 873              		.loc 1 394 3 is_stmt 1 view .LVU230
 394:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 874              		.loc 1 394 26 is_stmt 0 view .LVU231
 875 000e 0023     		movs	r3, #0
 876 0010 8360     		str	r3, [r0, #8]
 395:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 877              		.loc 1 395 3 is_stmt 1 view .LVU232
 395:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 878              		.loc 1 395 24 is_stmt 0 view .LVU233
 879 0012 C360     		str	r3, [r0, #12]
 396:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 880              		.loc 1 396 3 is_stmt 1 view .LVU234
 396:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 881              		.loc 1 396 22 is_stmt 0 view .LVU235
 882 0014 0361     		str	r3, [r0, #16]
 397:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 883              		.loc 1 397 3 is_stmt 1 view .LVU236
 397:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 884              		.loc 1 397 20 is_stmt 0 view .LVU237
 885 0016 0C22     		movs	r2, #12
 886 0018 4261     		str	r2, [r0, #20]
 398:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 887              		.loc 1 398 3 is_stmt 1 view .LVU238
 398:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 888              		.loc 1 398 25 is_stmt 0 view .LVU239
 889 001a 8361     		str	r3, [r0, #24]
 399:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 890              		.loc 1 399 3 is_stmt 1 view .LVU240
 399:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 891              		.loc 1 399 28 is_stmt 0 view .LVU241
 892 001c C361     		str	r3, [r0, #28]
 400:Core/Src/main.c ****   {
 893              		.loc 1 400 3 is_stmt 1 view .LVU242
 400:Core/Src/main.c ****   {
 894              		.loc 1 400 7 is_stmt 0 view .LVU243
 895 001e FFF7FEFF 		bl	HAL_UART_Init
 896              	.LVL44:
 400:Core/Src/main.c ****   {
 897              		.loc 1 400 6 view .LVU244
 898 0022 00B9     		cbnz	r0, .L39
 407:Core/Src/main.c **** 
 899              		.loc 1 407 1 view .LVU245
 900 0024 08BD     		pop	{r3, pc}
 901              	.L39:
 402:Core/Src/main.c ****   }
 902              		.loc 1 402 5 is_stmt 1 view .LVU246
 903 0026 FFF7FEFF 		bl	Error_Handler
 904              	.LVL45:
 905              	.L41:
 906 002a 00BF     		.align	2
 907              	.L40:
 908 002c 00000000 		.word	.LANCHOR0
 909 0030 00100140 		.word	1073811456
 910              		.cfi_endproc
 911              	.LFE138:
 913              		.section	.text.MX_I2C3_Init,"ax",%progbits
 914              		.align	1
ARM GAS  /tmp/ccv35OkG.s 			page 32


 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	MX_I2C3_Init:
 920              	.LFB135:
 251:Core/Src/main.c **** 
 921              		.loc 1 251 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925 0000 08B5     		push	{r3, lr}
 926              	.LCFI15:
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 3, -8
 929              		.cfi_offset 14, -4
 260:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 930              		.loc 1 260 3 view .LVU248
 260:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 931              		.loc 1 260 18 is_stmt 0 view .LVU249
 932 0002 0A48     		ldr	r0, .L46
 933 0004 0A4B     		ldr	r3, .L46+4
 934 0006 0360     		str	r3, [r0]
 261:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 935              		.loc 1 261 3 is_stmt 1 view .LVU250
 261:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 936              		.loc 1 261 25 is_stmt 0 view .LVU251
 937 0008 0A4B     		ldr	r3, .L46+8
 938 000a 4360     		str	r3, [r0, #4]
 262:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 939              		.loc 1 262 3 is_stmt 1 view .LVU252
 262:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 940              		.loc 1 262 24 is_stmt 0 view .LVU253
 941 000c 0023     		movs	r3, #0
 942 000e 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 943              		.loc 1 263 3 is_stmt 1 view .LVU254
 263:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 944              		.loc 1 263 26 is_stmt 0 view .LVU255
 945 0010 C360     		str	r3, [r0, #12]
 264:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 946              		.loc 1 264 3 is_stmt 1 view .LVU256
 264:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 947              		.loc 1 264 29 is_stmt 0 view .LVU257
 948 0012 4FF48042 		mov	r2, #16384
 949 0016 0261     		str	r2, [r0, #16]
 265:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 950              		.loc 1 265 3 is_stmt 1 view .LVU258
 265:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 951              		.loc 1 265 30 is_stmt 0 view .LVU259
 952 0018 4361     		str	r3, [r0, #20]
 266:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 953              		.loc 1 266 3 is_stmt 1 view .LVU260
 266:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 954              		.loc 1 266 26 is_stmt 0 view .LVU261
 955 001a 8361     		str	r3, [r0, #24]
 267:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 956              		.loc 1 267 3 is_stmt 1 view .LVU262
ARM GAS  /tmp/ccv35OkG.s 			page 33


 267:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 957              		.loc 1 267 30 is_stmt 0 view .LVU263
 958 001c C361     		str	r3, [r0, #28]
 268:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 959              		.loc 1 268 3 is_stmt 1 view .LVU264
 268:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 960              		.loc 1 268 28 is_stmt 0 view .LVU265
 961 001e 0362     		str	r3, [r0, #32]
 269:Core/Src/main.c ****   {
 962              		.loc 1 269 3 is_stmt 1 view .LVU266
 269:Core/Src/main.c ****   {
 963              		.loc 1 269 7 is_stmt 0 view .LVU267
 964 0020 FFF7FEFF 		bl	HAL_I2C_Init
 965              	.LVL46:
 269:Core/Src/main.c ****   {
 966              		.loc 1 269 6 view .LVU268
 967 0024 00B9     		cbnz	r0, .L45
 276:Core/Src/main.c **** 
 968              		.loc 1 276 1 view .LVU269
 969 0026 08BD     		pop	{r3, pc}
 970              	.L45:
 271:Core/Src/main.c ****   }
 971              		.loc 1 271 5 is_stmt 1 view .LVU270
 972 0028 FFF7FEFF 		bl	Error_Handler
 973              	.LVL47:
 974              	.L47:
 975              		.align	2
 976              	.L46:
 977 002c 00000000 		.word	.LANCHOR1
 978 0030 005C0040 		.word	1073765376
 979 0034 801A0600 		.word	400000
 980              		.cfi_endproc
 981              	.LFE135:
 983              		.section	.text.MX_CRC_Init,"ax",%progbits
 984              		.align	1
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	MX_CRC_Init:
 990              	.LFB134:
 226:Core/Src/main.c **** 
 991              		.loc 1 226 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995 0000 08B5     		push	{r3, lr}
 996              	.LCFI16:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 3, -8
 999              		.cfi_offset 14, -4
 235:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1000              		.loc 1 235 3 view .LVU272
 235:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1001              		.loc 1 235 17 is_stmt 0 view .LVU273
 1002 0002 0448     		ldr	r0, .L52
 1003 0004 044B     		ldr	r3, .L52+4
 1004 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccv35OkG.s 			page 34


 236:Core/Src/main.c ****   {
 1005              		.loc 1 236 3 is_stmt 1 view .LVU274
 236:Core/Src/main.c ****   {
 1006              		.loc 1 236 7 is_stmt 0 view .LVU275
 1007 0008 FFF7FEFF 		bl	HAL_CRC_Init
 1008              	.LVL48:
 236:Core/Src/main.c ****   {
 1009              		.loc 1 236 6 view .LVU276
 1010 000c 00B9     		cbnz	r0, .L51
 243:Core/Src/main.c **** 
 1011              		.loc 1 243 1 view .LVU277
 1012 000e 08BD     		pop	{r3, pc}
 1013              	.L51:
 238:Core/Src/main.c ****   }
 1014              		.loc 1 238 5 is_stmt 1 view .LVU278
 1015 0010 FFF7FEFF 		bl	Error_Handler
 1016              	.LVL49:
 1017              	.L53:
 1018              		.align	2
 1019              	.L52:
 1020 0014 00000000 		.word	.LANCHOR4
 1021 0018 00300240 		.word	1073885184
 1022              		.cfi_endproc
 1023              	.LFE134:
 1025              		.section	.text.MX_RTC_Init,"ax",%progbits
 1026              		.align	1
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1031              	MX_RTC_Init:
 1032              	.LFB136:
 284:Core/Src/main.c **** 
 1033              		.loc 1 284 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 24
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 00B5     		push	{lr}
 1038              	.LCFI17:
 1039              		.cfi_def_cfa_offset 4
 1040              		.cfi_offset 14, -4
 1041 0002 87B0     		sub	sp, sp, #28
 1042              	.LCFI18:
 1043              		.cfi_def_cfa_offset 32
 290:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1044              		.loc 1 290 3 view .LVU280
 290:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1045              		.loc 1 290 19 is_stmt 0 view .LVU281
 1046 0004 0023     		movs	r3, #0
 1047 0006 0193     		str	r3, [sp, #4]
 1048 0008 0293     		str	r3, [sp, #8]
 1049 000a 0393     		str	r3, [sp, #12]
 1050 000c 0493     		str	r3, [sp, #16]
 1051 000e 0593     		str	r3, [sp, #20]
 291:Core/Src/main.c **** 
 1052              		.loc 1 291 3 is_stmt 1 view .LVU282
 291:Core/Src/main.c **** 
 1053              		.loc 1 291 19 is_stmt 0 view .LVU283
ARM GAS  /tmp/ccv35OkG.s 			page 35


 1054 0010 0093     		str	r3, [sp]
 299:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1055              		.loc 1 299 3 is_stmt 1 view .LVU284
 299:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1056              		.loc 1 299 17 is_stmt 0 view .LVU285
 1057 0012 1A48     		ldr	r0, .L62
 1058 0014 1A4A     		ldr	r2, .L62+4
 1059 0016 0260     		str	r2, [r0]
 300:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1060              		.loc 1 300 3 is_stmt 1 view .LVU286
 300:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1061              		.loc 1 300 24 is_stmt 0 view .LVU287
 1062 0018 4360     		str	r3, [r0, #4]
 301:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1063              		.loc 1 301 3 is_stmt 1 view .LVU288
 301:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1064              		.loc 1 301 26 is_stmt 0 view .LVU289
 1065 001a 7F22     		movs	r2, #127
 1066 001c 8260     		str	r2, [r0, #8]
 302:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1067              		.loc 1 302 3 is_stmt 1 view .LVU290
 302:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1068              		.loc 1 302 25 is_stmt 0 view .LVU291
 1069 001e FF22     		movs	r2, #255
 1070 0020 C260     		str	r2, [r0, #12]
 303:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1071              		.loc 1 303 3 is_stmt 1 view .LVU292
 303:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1072              		.loc 1 303 20 is_stmt 0 view .LVU293
 1073 0022 0361     		str	r3, [r0, #16]
 304:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1074              		.loc 1 304 3 is_stmt 1 view .LVU294
 304:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1075              		.loc 1 304 28 is_stmt 0 view .LVU295
 1076 0024 4361     		str	r3, [r0, #20]
 305:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1077              		.loc 1 305 3 is_stmt 1 view .LVU296
 305:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1078              		.loc 1 305 24 is_stmt 0 view .LVU297
 1079 0026 8361     		str	r3, [r0, #24]
 306:Core/Src/main.c ****   {
 1080              		.loc 1 306 3 is_stmt 1 view .LVU298
 306:Core/Src/main.c ****   {
 1081              		.loc 1 306 7 is_stmt 0 view .LVU299
 1082 0028 FFF7FEFF 		bl	HAL_RTC_Init
 1083              	.LVL50:
 306:Core/Src/main.c ****   {
 1084              		.loc 1 306 6 view .LVU300
 1085 002c 00BB     		cbnz	r0, .L59
 317:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1086              		.loc 1 317 3 is_stmt 1 view .LVU301
 317:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1087              		.loc 1 317 15 is_stmt 0 view .LVU302
 1088 002e 0023     		movs	r3, #0
 1089 0030 8DF80430 		strb	r3, [sp, #4]
 318:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1090              		.loc 1 318 3 is_stmt 1 view .LVU303
ARM GAS  /tmp/ccv35OkG.s 			page 36


 318:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1091              		.loc 1 318 17 is_stmt 0 view .LVU304
 1092 0034 8DF80530 		strb	r3, [sp, #5]
 319:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1093              		.loc 1 319 3 is_stmt 1 view .LVU305
 319:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1094              		.loc 1 319 17 is_stmt 0 view .LVU306
 1095 0038 8DF80630 		strb	r3, [sp, #6]
 320:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1096              		.loc 1 320 3 is_stmt 1 view .LVU307
 320:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1097              		.loc 1 320 24 is_stmt 0 view .LVU308
 1098 003c 0493     		str	r3, [sp, #16]
 321:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1099              		.loc 1 321 3 is_stmt 1 view .LVU309
 321:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1100              		.loc 1 321 24 is_stmt 0 view .LVU310
 1101 003e 0593     		str	r3, [sp, #20]
 322:Core/Src/main.c ****   {
 1102              		.loc 1 322 3 is_stmt 1 view .LVU311
 322:Core/Src/main.c ****   {
 1103              		.loc 1 322 7 is_stmt 0 view .LVU312
 1104 0040 0122     		movs	r2, #1
 1105 0042 01A9     		add	r1, sp, #4
 1106 0044 0D48     		ldr	r0, .L62
 1107 0046 FFF7FEFF 		bl	HAL_RTC_SetTime
 1108              	.LVL51:
 322:Core/Src/main.c ****   {
 1109              		.loc 1 322 6 view .LVU313
 1110 004a 98B9     		cbnz	r0, .L60
 326:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1111              		.loc 1 326 3 is_stmt 1 view .LVU314
 326:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1112              		.loc 1 326 17 is_stmt 0 view .LVU315
 1113 004c 0122     		movs	r2, #1
 1114 004e 8DF80020 		strb	r2, [sp]
 327:Core/Src/main.c ****   sDate.Date = 0x1;
 1115              		.loc 1 327 3 is_stmt 1 view .LVU316
 327:Core/Src/main.c ****   sDate.Date = 0x1;
 1116              		.loc 1 327 15 is_stmt 0 view .LVU317
 1117 0052 8DF80120 		strb	r2, [sp, #1]
 328:Core/Src/main.c ****   sDate.Year = 0x0;
 1118              		.loc 1 328 3 is_stmt 1 view .LVU318
 328:Core/Src/main.c ****   sDate.Year = 0x0;
 1119              		.loc 1 328 14 is_stmt 0 view .LVU319
 1120 0056 8DF80220 		strb	r2, [sp, #2]
 329:Core/Src/main.c **** 
 1121              		.loc 1 329 3 is_stmt 1 view .LVU320
 329:Core/Src/main.c **** 
 1122              		.loc 1 329 14 is_stmt 0 view .LVU321
 1123 005a 0023     		movs	r3, #0
 1124 005c 8DF80330 		strb	r3, [sp, #3]
 331:Core/Src/main.c ****   {
 1125              		.loc 1 331 3 is_stmt 1 view .LVU322
 331:Core/Src/main.c ****   {
 1126              		.loc 1 331 7 is_stmt 0 view .LVU323
 1127 0060 6946     		mov	r1, sp
ARM GAS  /tmp/ccv35OkG.s 			page 37


 1128 0062 0648     		ldr	r0, .L62
 1129 0064 FFF7FEFF 		bl	HAL_RTC_SetDate
 1130              	.LVL52:
 331:Core/Src/main.c ****   {
 1131              		.loc 1 331 6 view .LVU324
 1132 0068 30B9     		cbnz	r0, .L61
 338:Core/Src/main.c **** 
 1133              		.loc 1 338 1 view .LVU325
 1134 006a 07B0     		add	sp, sp, #28
 1135              	.LCFI19:
 1136              		.cfi_remember_state
 1137              		.cfi_def_cfa_offset 4
 1138              		@ sp needed
 1139 006c 5DF804FB 		ldr	pc, [sp], #4
 1140              	.L59:
 1141              	.LCFI20:
 1142              		.cfi_restore_state
 308:Core/Src/main.c ****   }
 1143              		.loc 1 308 5 is_stmt 1 view .LVU326
 1144 0070 FFF7FEFF 		bl	Error_Handler
 1145              	.LVL53:
 1146              	.L60:
 324:Core/Src/main.c ****   }
 1147              		.loc 1 324 5 view .LVU327
 1148 0074 FFF7FEFF 		bl	Error_Handler
 1149              	.LVL54:
 1150              	.L61:
 333:Core/Src/main.c ****   }
 1151              		.loc 1 333 5 view .LVU328
 1152 0078 FFF7FEFF 		bl	Error_Handler
 1153              	.LVL55:
 1154              	.L63:
 1155              		.align	2
 1156              	.L62:
 1157 007c 00000000 		.word	.LANCHOR5
 1158 0080 00280040 		.word	1073752064
 1159              		.cfi_endproc
 1160              	.LFE136:
 1162              		.section	.text.SystemClock_Config,"ax",%progbits
 1163              		.align	1
 1164              		.global	SystemClock_Config
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	SystemClock_Config:
 1170              	.LFB133:
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1171              		.loc 1 180 1 view -0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 80
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175 0000 00B5     		push	{lr}
 1176              	.LCFI21:
 1177              		.cfi_def_cfa_offset 4
 1178              		.cfi_offset 14, -4
 1179 0002 95B0     		sub	sp, sp, #84
 1180              	.LCFI22:
ARM GAS  /tmp/ccv35OkG.s 			page 38


 1181              		.cfi_def_cfa_offset 88
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1182              		.loc 1 181 3 view .LVU330
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1183              		.loc 1 181 22 is_stmt 0 view .LVU331
 1184 0004 3022     		movs	r2, #48
 1185 0006 0021     		movs	r1, #0
 1186 0008 08A8     		add	r0, sp, #32
 1187 000a FFF7FEFF 		bl	memset
 1188              	.LVL56:
 182:Core/Src/main.c **** 
 1189              		.loc 1 182 3 is_stmt 1 view .LVU332
 182:Core/Src/main.c **** 
 1190              		.loc 1 182 22 is_stmt 0 view .LVU333
 1191 000e 0023     		movs	r3, #0
 1192 0010 0393     		str	r3, [sp, #12]
 1193 0012 0493     		str	r3, [sp, #16]
 1194 0014 0593     		str	r3, [sp, #20]
 1195 0016 0693     		str	r3, [sp, #24]
 1196 0018 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1197              		.loc 1 186 3 is_stmt 1 view .LVU334
 1198              	.LBB15:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1199              		.loc 1 186 3 view .LVU335
 1200 001a 0193     		str	r3, [sp, #4]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1201              		.loc 1 186 3 view .LVU336
 1202 001c 214A     		ldr	r2, .L70
 1203 001e 116C     		ldr	r1, [r2, #64]
 1204 0020 41F08051 		orr	r1, r1, #268435456
 1205 0024 1164     		str	r1, [r2, #64]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1206              		.loc 1 186 3 view .LVU337
 1207 0026 126C     		ldr	r2, [r2, #64]
 1208 0028 02F08052 		and	r2, r2, #268435456
 1209 002c 0192     		str	r2, [sp, #4]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1210              		.loc 1 186 3 view .LVU338
 1211 002e 019A     		ldr	r2, [sp, #4]
 1212              	.LBE15:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1213              		.loc 1 186 3 view .LVU339
 187:Core/Src/main.c **** 
 1214              		.loc 1 187 3 view .LVU340
 1215              	.LBB16:
 187:Core/Src/main.c **** 
 1216              		.loc 1 187 3 view .LVU341
 1217 0030 0293     		str	r3, [sp, #8]
 187:Core/Src/main.c **** 
 1218              		.loc 1 187 3 view .LVU342
 1219 0032 1D4A     		ldr	r2, .L70+4
 1220 0034 1368     		ldr	r3, [r2]
 1221 0036 23F44043 		bic	r3, r3, #49152
 1222 003a 43F40043 		orr	r3, r3, #32768
 1223 003e 1360     		str	r3, [r2]
 187:Core/Src/main.c **** 
ARM GAS  /tmp/ccv35OkG.s 			page 39


 1224              		.loc 1 187 3 view .LVU343
 1225 0040 1368     		ldr	r3, [r2]
 1226 0042 03F44043 		and	r3, r3, #49152
 1227 0046 0293     		str	r3, [sp, #8]
 187:Core/Src/main.c **** 
 1228              		.loc 1 187 3 view .LVU344
 1229 0048 029B     		ldr	r3, [sp, #8]
 1230              	.LBE16:
 187:Core/Src/main.c **** 
 1231              		.loc 1 187 3 view .LVU345
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1232              		.loc 1 192 3 view .LVU346
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1233              		.loc 1 192 36 is_stmt 0 view .LVU347
 1234 004a 0923     		movs	r3, #9
 1235 004c 0893     		str	r3, [sp, #32]
 193:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1236              		.loc 1 193 3 is_stmt 1 view .LVU348
 193:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1237              		.loc 1 193 30 is_stmt 0 view .LVU349
 1238 004e 4FF48033 		mov	r3, #65536
 1239 0052 0993     		str	r3, [sp, #36]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1240              		.loc 1 194 3 is_stmt 1 view .LVU350
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1241              		.loc 1 194 30 is_stmt 0 view .LVU351
 1242 0054 0123     		movs	r3, #1
 1243 0056 0D93     		str	r3, [sp, #52]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1244              		.loc 1 195 3 is_stmt 1 view .LVU352
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1245              		.loc 1 195 34 is_stmt 0 view .LVU353
 1246 0058 0223     		movs	r3, #2
 1247 005a 0E93     		str	r3, [sp, #56]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1248              		.loc 1 196 3 is_stmt 1 view .LVU354
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1249              		.loc 1 196 35 is_stmt 0 view .LVU355
 1250 005c 4FF48002 		mov	r2, #4194304
 1251 0060 0F92     		str	r2, [sp, #60]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1252              		.loc 1 197 3 is_stmt 1 view .LVU356
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1253              		.loc 1 197 30 is_stmt 0 view .LVU357
 1254 0062 0822     		movs	r2, #8
 1255 0064 1092     		str	r2, [sp, #64]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1256              		.loc 1 198 3 is_stmt 1 view .LVU358
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1257              		.loc 1 198 30 is_stmt 0 view .LVU359
 1258 0066 5422     		movs	r2, #84
 1259 0068 1192     		str	r2, [sp, #68]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1260              		.loc 1 199 3 is_stmt 1 view .LVU360
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1261              		.loc 1 199 30 is_stmt 0 view .LVU361
 1262 006a 1293     		str	r3, [sp, #72]
ARM GAS  /tmp/ccv35OkG.s 			page 40


 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1263              		.loc 1 200 3 is_stmt 1 view .LVU362
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1264              		.loc 1 200 30 is_stmt 0 view .LVU363
 1265 006c 0423     		movs	r3, #4
 1266 006e 1393     		str	r3, [sp, #76]
 201:Core/Src/main.c ****   {
 1267              		.loc 1 201 3 is_stmt 1 view .LVU364
 201:Core/Src/main.c ****   {
 1268              		.loc 1 201 7 is_stmt 0 view .LVU365
 1269 0070 08A8     		add	r0, sp, #32
 1270 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1271              	.LVL57:
 201:Core/Src/main.c ****   {
 1272              		.loc 1 201 6 view .LVU366
 1273 0076 80B9     		cbnz	r0, .L68
 208:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1274              		.loc 1 208 3 is_stmt 1 view .LVU367
 208:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1275              		.loc 1 208 31 is_stmt 0 view .LVU368
 1276 0078 0F23     		movs	r3, #15
 1277 007a 0393     		str	r3, [sp, #12]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1278              		.loc 1 209 3 is_stmt 1 view .LVU369
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1279              		.loc 1 209 34 is_stmt 0 view .LVU370
 1280 007c 0221     		movs	r1, #2
 1281 007e 0491     		str	r1, [sp, #16]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1282              		.loc 1 210 3 is_stmt 1 view .LVU371
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1283              		.loc 1 210 35 is_stmt 0 view .LVU372
 1284 0080 0023     		movs	r3, #0
 1285 0082 0593     		str	r3, [sp, #20]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1286              		.loc 1 211 3 is_stmt 1 view .LVU373
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1287              		.loc 1 211 36 is_stmt 0 view .LVU374
 1288 0084 4FF48052 		mov	r2, #4096
 1289 0088 0692     		str	r2, [sp, #24]
 212:Core/Src/main.c **** 
 1290              		.loc 1 212 3 is_stmt 1 view .LVU375
 212:Core/Src/main.c **** 
 1291              		.loc 1 212 36 is_stmt 0 view .LVU376
 1292 008a 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   {
 1293              		.loc 1 214 3 is_stmt 1 view .LVU377
 214:Core/Src/main.c ****   {
 1294              		.loc 1 214 7 is_stmt 0 view .LVU378
 1295 008c 03A8     		add	r0, sp, #12
 1296 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1297              	.LVL58:
 214:Core/Src/main.c ****   {
 1298              		.loc 1 214 6 view .LVU379
 1299 0092 20B9     		cbnz	r0, .L69
 218:Core/Src/main.c **** 
 1300              		.loc 1 218 1 view .LVU380
ARM GAS  /tmp/ccv35OkG.s 			page 41


 1301 0094 15B0     		add	sp, sp, #84
 1302              	.LCFI23:
 1303              		.cfi_remember_state
 1304              		.cfi_def_cfa_offset 4
 1305              		@ sp needed
 1306 0096 5DF804FB 		ldr	pc, [sp], #4
 1307              	.L68:
 1308              	.LCFI24:
 1309              		.cfi_restore_state
 203:Core/Src/main.c ****   }
 1310              		.loc 1 203 5 is_stmt 1 view .LVU381
 1311 009a FFF7FEFF 		bl	Error_Handler
 1312              	.LVL59:
 1313              	.L69:
 216:Core/Src/main.c ****   }
 1314              		.loc 1 216 5 view .LVU382
 1315 009e FFF7FEFF 		bl	Error_Handler
 1316              	.LVL60:
 1317              	.L71:
 1318 00a2 00BF     		.align	2
 1319              	.L70:
 1320 00a4 00380240 		.word	1073887232
 1321 00a8 00700040 		.word	1073770496
 1322              		.cfi_endproc
 1323              	.LFE133:
 1325              		.section	.text.main,"ax",%progbits
 1326              		.align	1
 1327              		.global	main
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	main:
 1333              	.LFB132:
 124:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1334              		.loc 1 124 1 view -0
 1335              		.cfi_startproc
 1336              		@ Volatile: function does not return.
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339 0000 08B5     		push	{r3, lr}
 1340              	.LCFI25:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 3, -8
 1343              		.cfi_offset 14, -4
 132:Core/Src/main.c **** 
 1344              		.loc 1 132 3 view .LVU384
 1345 0002 FFF7FEFF 		bl	HAL_Init
 1346              	.LVL61:
 139:Core/Src/main.c **** 
 1347              		.loc 1 139 3 view .LVU385
 1348 0006 FFF7FEFF 		bl	SystemClock_Config
 1349              	.LVL62:
 146:Core/Src/main.c ****   MX_DMA_Init();
 1350              		.loc 1 146 3 view .LVU386
 1351 000a FFF7FEFF 		bl	MX_GPIO_Init
 1352              	.LVL63:
 147:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccv35OkG.s 			page 42


 1353              		.loc 1 147 3 view .LVU387
 1354 000e FFF7FEFF 		bl	MX_DMA_Init
 1355              	.LVL64:
 148:Core/Src/main.c ****   MX_SPI1_Init();
 1356              		.loc 1 148 3 view .LVU388
 1357 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 1358              	.LVL65:
 149:Core/Src/main.c ****   MX_USART1_UART_Init();
 1359              		.loc 1 149 3 view .LVU389
 1360 0016 FFF7FEFF 		bl	MX_SPI1_Init
 1361              	.LVL66:
 150:Core/Src/main.c ****   MX_I2C3_Init();
 1362              		.loc 1 150 3 view .LVU390
 1363 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1364              	.LVL67:
 151:Core/Src/main.c ****   MX_CRC_Init();
 1365              		.loc 1 151 3 view .LVU391
 1366 001e FFF7FEFF 		bl	MX_I2C3_Init
 1367              	.LVL68:
 152:Core/Src/main.c ****   MX_RTC_Init();
 1368              		.loc 1 152 3 view .LVU392
 1369 0022 FFF7FEFF 		bl	MX_CRC_Init
 1370              	.LVL69:
 153:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1371              		.loc 1 153 3 view .LVU393
 1372 0026 FFF7FEFF 		bl	MX_RTC_Init
 1373              	.LVL70:
 156:Core/Src/main.c ****   print_bmp280_id();
 1374              		.loc 1 156 3 view .LVU394
 1375 002a FFF7FEFF 		bl	i2c_scan
 1376              	.LVL71:
 157:Core/Src/main.c **** 
 1377              		.loc 1 157 3 view .LVU395
 1378 002e FFF7FEFF 		bl	print_bmp280_id
 1379              	.LVL72:
 1380              	.L73:
 163:Core/Src/main.c ****   {
 1381              		.loc 1 163 3 discriminator 1 view .LVU396
 166:Core/Src/main.c ****     HAL_Delay(500);
 1382              		.loc 1 166 5 discriminator 1 view .LVU397
 1383 0032 0121     		movs	r1, #1
 1384 0034 0348     		ldr	r0, .L75
 1385 0036 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1386              	.LVL73:
 167:Core/Src/main.c ****     /* USER CODE END WHILE */
 1387              		.loc 1 167 5 discriminator 1 view .LVU398
 1388 003a 4FF4FA70 		mov	r0, #500
 1389 003e FFF7FEFF 		bl	HAL_Delay
 1390              	.LVL74:
 163:Core/Src/main.c ****   {
 1391              		.loc 1 163 9 discriminator 1 view .LVU399
 1392 0042 F6E7     		b	.L73
 1393              	.L76:
 1394              		.align	2
 1395              	.L75:
 1396 0044 00040240 		.word	1073873920
 1397              		.cfi_endproc
ARM GAS  /tmp/ccv35OkG.s 			page 43


 1398              	.LFE132:
 1400              		.global	hdma_usart2_tx
 1401              		.global	hdma_usart2_rx
 1402              		.global	hdma_usart1_tx
 1403              		.global	huart2
 1404              		.global	huart1
 1405              		.global	hdma_spi1_tx
 1406              		.global	hdma_spi1_rx
 1407              		.global	hspi1
 1408              		.global	hrtc
 1409              		.global	hdma_i2c3_tx
 1410              		.global	hdma_i2c3_rx
 1411              		.global	hi2c3
 1412              		.global	hcrc
 1413              		.section	.bss.hcrc,"aw",%nobits
 1414              		.align	2
 1415              		.set	.LANCHOR4,. + 0
 1418              	hcrc:
 1419 0000 00000000 		.space	8
 1419      00000000 
 1420              		.section	.bss.hdma_i2c3_rx,"aw",%nobits
 1421              		.align	2
 1424              	hdma_i2c3_rx:
 1425 0000 00000000 		.space	96
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1426              		.section	.bss.hdma_i2c3_tx,"aw",%nobits
 1427              		.align	2
 1430              	hdma_i2c3_tx:
 1431 0000 00000000 		.space	96
 1431      00000000 
 1431      00000000 
 1431      00000000 
 1431      00000000 
 1432              		.section	.bss.hdma_spi1_rx,"aw",%nobits
 1433              		.align	2
 1436              	hdma_spi1_rx:
 1437 0000 00000000 		.space	96
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1438              		.section	.bss.hdma_spi1_tx,"aw",%nobits
 1439              		.align	2
 1442              	hdma_spi1_tx:
 1443 0000 00000000 		.space	96
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1444              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 1445              		.align	2
 1448              	hdma_usart1_tx:
 1449 0000 00000000 		.space	96
 1449      00000000 
ARM GAS  /tmp/ccv35OkG.s 			page 44


 1449      00000000 
 1449      00000000 
 1449      00000000 
 1450              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 1451              		.align	2
 1454              	hdma_usart2_rx:
 1455 0000 00000000 		.space	96
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1455      00000000 
 1456              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 1457              		.align	2
 1460              	hdma_usart2_tx:
 1461 0000 00000000 		.space	96
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.section	.bss.hi2c3,"aw",%nobits
 1463              		.align	2
 1464              		.set	.LANCHOR1,. + 0
 1467              	hi2c3:
 1468 0000 00000000 		.space	84
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1469              		.section	.bss.hrtc,"aw",%nobits
 1470              		.align	2
 1471              		.set	.LANCHOR5,. + 0
 1474              	hrtc:
 1475 0000 00000000 		.space	32
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1476              		.section	.bss.hspi1,"aw",%nobits
 1477              		.align	2
 1478              		.set	.LANCHOR3,. + 0
 1481              	hspi1:
 1482 0000 00000000 		.space	88
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1483              		.section	.bss.huart1,"aw",%nobits
 1484              		.align	2
 1485              		.set	.LANCHOR0,. + 0
 1488              	huart1:
 1489 0000 00000000 		.space	68
 1489      00000000 
 1489      00000000 
 1489      00000000 
 1489      00000000 
 1490              		.section	.bss.huart2,"aw",%nobits
 1491              		.align	2
ARM GAS  /tmp/ccv35OkG.s 			page 45


 1492              		.set	.LANCHOR2,. + 0
 1495              	huart2:
 1496 0000 00000000 		.space	68
 1496      00000000 
 1496      00000000 
 1496      00000000 
 1496      00000000 
 1497              		.text
 1498              	.Letext0:
 1499              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1500              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1501              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1502              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1503              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1504              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1505              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1506              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1507              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_crc.h"
 1508              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1509              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1510              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1511              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1512              		.file 16 "<built-in>"
 1513              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1514              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccv35OkG.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccv35OkG.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccv35OkG.s:289    .text.MX_GPIO_Init:0000000000000134 $d
     /tmp/ccv35OkG.s:298    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:303    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccv35OkG.s:430    .text.MX_DMA_Init:00000000000000a4 $d
     /tmp/ccv35OkG.s:435    .rodata.i2c_scan.str1.4:0000000000000000 $d
     /tmp/ccv35OkG.s:445    .text.i2c_scan:0000000000000000 $t
     /tmp/ccv35OkG.s:451    .text.i2c_scan:0000000000000000 i2c_scan
     /tmp/ccv35OkG.s:589    .text.i2c_scan:00000000000000a0 $d
     /tmp/ccv35OkG.s:599    .rodata.print_bmp280_id.str1.4:0000000000000000 $d
     /tmp/ccv35OkG.s:603    .text.print_bmp280_id:0000000000000000 $t
     /tmp/ccv35OkG.s:609    .text.print_bmp280_id:0000000000000000 print_bmp280_id
     /tmp/ccv35OkG.s:658    .text.print_bmp280_id:0000000000000038 $d
     /tmp/ccv35OkG.s:664    .text.Error_Handler:0000000000000000 $t
     /tmp/ccv35OkG.s:670    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccv35OkG.s:702    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:707    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccv35OkG.s:762    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccv35OkG.s:768    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:773    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccv35OkG.s:842    .text.MX_SPI1_Init:0000000000000038 $d
     /tmp/ccv35OkG.s:848    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:853    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccv35OkG.s:908    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccv35OkG.s:914    .text.MX_I2C3_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:919    .text.MX_I2C3_Init:0000000000000000 MX_I2C3_Init
     /tmp/ccv35OkG.s:977    .text.MX_I2C3_Init:000000000000002c $d
     /tmp/ccv35OkG.s:984    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:989    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccv35OkG.s:1020   .text.MX_CRC_Init:0000000000000014 $d
     /tmp/ccv35OkG.s:1026   .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccv35OkG.s:1031   .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccv35OkG.s:1157   .text.MX_RTC_Init:000000000000007c $d
     /tmp/ccv35OkG.s:1163   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccv35OkG.s:1169   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccv35OkG.s:1320   .text.SystemClock_Config:00000000000000a4 $d
     /tmp/ccv35OkG.s:1326   .text.main:0000000000000000 $t
     /tmp/ccv35OkG.s:1332   .text.main:0000000000000000 main
     /tmp/ccv35OkG.s:1396   .text.main:0000000000000044 $d
     /tmp/ccv35OkG.s:1460   .bss.hdma_usart2_tx:0000000000000000 hdma_usart2_tx
     /tmp/ccv35OkG.s:1454   .bss.hdma_usart2_rx:0000000000000000 hdma_usart2_rx
     /tmp/ccv35OkG.s:1448   .bss.hdma_usart1_tx:0000000000000000 hdma_usart1_tx
     /tmp/ccv35OkG.s:1495   .bss.huart2:0000000000000000 huart2
     /tmp/ccv35OkG.s:1488   .bss.huart1:0000000000000000 huart1
     /tmp/ccv35OkG.s:1442   .bss.hdma_spi1_tx:0000000000000000 hdma_spi1_tx
     /tmp/ccv35OkG.s:1436   .bss.hdma_spi1_rx:0000000000000000 hdma_spi1_rx
     /tmp/ccv35OkG.s:1481   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccv35OkG.s:1474   .bss.hrtc:0000000000000000 hrtc
     /tmp/ccv35OkG.s:1430   .bss.hdma_i2c3_tx:0000000000000000 hdma_i2c3_tx
     /tmp/ccv35OkG.s:1424   .bss.hdma_i2c3_rx:0000000000000000 hdma_i2c3_rx
     /tmp/ccv35OkG.s:1467   .bss.hi2c3:0000000000000000 hi2c3
     /tmp/ccv35OkG.s:1418   .bss.hcrc:0000000000000000 hcrc
     /tmp/ccv35OkG.s:1414   .bss.hcrc:0000000000000000 $d
     /tmp/ccv35OkG.s:1421   .bss.hdma_i2c3_rx:0000000000000000 $d
ARM GAS  /tmp/ccv35OkG.s 			page 47


     /tmp/ccv35OkG.s:1427   .bss.hdma_i2c3_tx:0000000000000000 $d
     /tmp/ccv35OkG.s:1433   .bss.hdma_spi1_rx:0000000000000000 $d
     /tmp/ccv35OkG.s:1439   .bss.hdma_spi1_tx:0000000000000000 $d
     /tmp/ccv35OkG.s:1445   .bss.hdma_usart1_tx:0000000000000000 $d
     /tmp/ccv35OkG.s:1451   .bss.hdma_usart2_rx:0000000000000000 $d
     /tmp/ccv35OkG.s:1457   .bss.hdma_usart2_tx:0000000000000000 $d
     /tmp/ccv35OkG.s:1463   .bss.hi2c3:0000000000000000 $d
     /tmp/ccv35OkG.s:1470   .bss.hrtc:0000000000000000 $d
     /tmp/ccv35OkG.s:1477   .bss.hspi1:0000000000000000 $d
     /tmp/ccv35OkG.s:1484   .bss.huart1:0000000000000000 $d
     /tmp/ccv35OkG.s:1491   .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
sprintf
HAL_I2C_IsDeviceReady
bmp280_getid
snprintf
HAL_UART_Init
HAL_SPI_Init
HAL_I2C_Init
HAL_CRC_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
