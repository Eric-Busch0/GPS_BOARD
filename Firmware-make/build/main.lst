ARM GAS  /tmp/cclLRy0J.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB146:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include "bmp280.h"
  27:Core/Src/main.c **** #include "lis2hd12.h"
  28:Core/Src/main.c **** #include "eeprom.h"
  29:Core/Src/main.c **** #include "uart_printf.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cclLRy0J.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c3_rx;
  52:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c3_tx;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  58:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** UART_HandleTypeDef huart1;
  61:Core/Src/main.c **** UART_HandleTypeDef huart2;
  62:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  63:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  64:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** static void MX_DMA_Init(void);
  74:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  75:Core/Src/main.c **** static void MX_SPI1_Init(void);
  76:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  77:Core/Src/main.c **** static void MX_I2C3_Init(void);
  78:Core/Src/main.c **** static void MX_CRC_Init(void);
  79:Core/Src/main.c **** static void MX_RTC_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  85:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  86:Core/Src/main.c **** void i2c_scan(void)
  87:Core/Src/main.c **** {
  88:Core/Src/main.c ****   uint8_t Buffer[25] = {0};
ARM GAS  /tmp/cclLRy0J.s 			page 3


  89:Core/Src/main.c ****   uint8_t Space[] = " - ";
  90:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
  91:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /*-[ I2C Bus Scanning ]-*/
  94:Core/Src/main.c ****   uint8_t ret;
  95:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, StartMSG, sizeof(StartMSG), HAL_MAX_DELAY);
  96:Core/Src/main.c ****   for (uint8_t i = 1; i < 128; i++)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     ret = HAL_I2C_IsDeviceReady(&hi2c3, (uint16_t)(i << 1), 3, 5);
  99:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
 100:Core/Src/main.c ****     {
 101:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Space, sizeof(Space), HAL_MAX_DELAY);
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     else if (ret == HAL_OK)
 104:Core/Src/main.c ****     {
 105:Core/Src/main.c ****       sprintf(Buffer, "0x%X", i);
 106:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 107:Core/Src/main.c ****     }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     if(i % 16 == 0)
 110:Core/Src/main.c ****     {
 111:Core/Src/main.c ****       sprintf(Buffer, "\r\n", i);
 112:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     }
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, EndMSG, sizeof(EndMSG), HAL_MAX_DELAY);
 117:Core/Src/main.c ****   /*--[ Scanning Done ]--*/
 118:Core/Src/main.c **** }
 119:Core/Src/main.c **** void print_bmp280_id()
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   uint8_t id;
 122:Core/Src/main.c ****   uint8_t ret = bmp280_getid(&id);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   uint8_t buf[16] = {0};
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   snprintf((char*)buf, sizeof(buf), "BMP280 ID:%02X\r\n", id);
 127:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, sizeof(buf), 10000);
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** void print_lis2hd12_who_am_i(void)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   uint8_t id;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   uint8_t ret = lis2hd12_who_am_i(&id);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   uint8_t buffer[32] = {0};
 137:Core/Src/main.c ****   if(ret != HAL_OK)
 138:Core/Src/main.c ****   { 
 139:Core/Src/main.c ****     snprintf((char*)buffer, sizeof(buffer), "Error IMU\r\n");
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   else
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     snprintf((char*)buffer, sizeof(buffer), "IMU ID: %#02X\r\n", id);
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c **** 
ARM GAS  /tmp/cclLRy0J.s 			page 4


 146:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buffer, strlen((char*)buffer), HAL_MAX_DELAY);
 147:Core/Src/main.c **** }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** void read_pressure(void)
 150:Core/Src/main.c **** {
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   static uint8_t buffer[32] = {0};
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   uint8_t ret;
 155:Core/Src/main.c ****   ret = bmp280_start_press_read();
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if(ret != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     snprintf((char*)buffer, sizeof(buffer), "BMP280 Error\r\n");
 160:Core/Src/main.c ****     return;
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   HAL_Delay(100);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   uint32_t pressure = bmp280_get_temp();
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   snprintf((char*)buffer, sizeof(buffer), "Pressure %lu\r\n", pressure);
 172:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buffer, strlen((char*)buffer), HAL_MAX_DELAY);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   memset(buffer, 0, strlen((char*)buffer));
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** /* USER CODE END 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief  The application entry point.
 182:Core/Src/main.c ****   * @retval int
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** int main(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END 1 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 193:Core/Src/main.c ****   HAL_Init();
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END Init */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* Configure the system clock */
 200:Core/Src/main.c ****   SystemClock_Config();
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/cclLRy0J.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END SysInit */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* Initialize all configured peripherals */
 207:Core/Src/main.c ****   MX_GPIO_Init();
 208:Core/Src/main.c ****   MX_DMA_Init();
 209:Core/Src/main.c ****   MX_USART2_UART_Init();
 210:Core/Src/main.c ****   MX_SPI1_Init();
 211:Core/Src/main.c ****   MX_USART1_UART_Init();
 212:Core/Src/main.c ****   MX_I2C3_Init();
 213:Core/Src/main.c ****   MX_CRC_Init();
 214:Core/Src/main.c ****   MX_RTC_Init();
 215:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 216:Core/Src/main.c ****   // uart_printf("Beginning\r\n");
 217:Core/Src/main.c ****   // i2c_scan();
 218:Core/Src/main.c ****   // print_bmp280_id();
 219:Core/Src/main.c ****   print_lis2hd12_who_am_i();
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   // uint8_t data[20] = {0};
 222:Core/Src/main.c ****   // uint8_t in[20] = {0};
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   // for(uint8_t i = 0; i < sizeof(data); i++)
 228:Core/Src/main.c ****   // {
 229:Core/Src/main.c ****   //   data[i] = i;
 230:Core/Src/main.c ****   // }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   // uint8_t ret = eeprom_write(0x00, data, sizeof(data));
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   // if(ret != HAL_OK)
 237:Core/Src/main.c ****   // {
 238:Core/Src/main.c ****   //   while (1);
 239:Core/Src/main.c ****     
 240:Core/Src/main.c ****   // }
 241:Core/Src/main.c ****   
 242:Core/Src/main.c ****   // eeprom_read(0x00, in, sizeof(data));
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   
 250:Core/Src/main.c ****   /* USER CODE END 2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* Infinite loop */
 253:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 254:Core/Src/main.c ****   while (1)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****     HAL_GPIO_TogglePin(USR_LED1_GPIO_Port, USR_LED1_Pin);
 258:Core/Src/main.c ****     HAL_Delay(500);
 259:Core/Src/main.c ****     // read_pressure();
ARM GAS  /tmp/cclLRy0J.s 			page 6


 260:Core/Src/main.c ****     /* USER CODE END WHILE */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c ****   /* USER CODE END 3 */
 265:Core/Src/main.c **** }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /**
 268:Core/Src/main.c ****   * @brief System Clock Configuration
 269:Core/Src/main.c ****   * @retval None
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** void SystemClock_Config(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 274:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 279:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 282:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 285:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 286:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 287:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 288:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 289:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 290:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 291:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 292:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 293:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 301:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 302:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 303:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 304:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 305:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** }
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief CRC Initialization Function
 315:Core/Src/main.c ****   * @param None
 316:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cclLRy0J.s 			page 7


 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** static void MX_CRC_Init(void)
 319:Core/Src/main.c **** {
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 328:Core/Src/main.c ****   hcrc.Instance = CRC;
 329:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 341:Core/Src/main.c ****   * @param None
 342:Core/Src/main.c ****   * @retval None
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c **** static void MX_I2C3_Init(void)
 345:Core/Src/main.c **** {
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 354:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 355:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 356:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 357:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 358:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 359:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 360:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 361:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 362:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 363:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 364:Core/Src/main.c ****   {
 365:Core/Src/main.c ****     Error_Handler();
 366:Core/Src/main.c ****   }
 367:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** /**
ARM GAS  /tmp/cclLRy0J.s 			page 8


 374:Core/Src/main.c ****   * @brief RTC Initialization Function
 375:Core/Src/main.c ****   * @param None
 376:Core/Src/main.c ****   * @retval None
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c **** static void MX_RTC_Init(void)
 379:Core/Src/main.c **** {
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 386:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /** Initialize RTC Only
 393:Core/Src/main.c ****   */
 394:Core/Src/main.c ****   hrtc.Instance = RTC;
 395:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 396:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 397:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 398:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 399:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 400:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 401:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c ****   sTime.Hours = 0x0;
 413:Core/Src/main.c ****   sTime.Minutes = 0x0;
 414:Core/Src/main.c ****   sTime.Seconds = 0x0;
 415:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 416:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 417:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 418:Core/Src/main.c ****   {
 419:Core/Src/main.c ****     Error_Handler();
 420:Core/Src/main.c ****   }
 421:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 422:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 423:Core/Src/main.c ****   sDate.Date = 0x1;
 424:Core/Src/main.c ****   sDate.Year = 0x0;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****     Error_Handler();
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
ARM GAS  /tmp/cclLRy0J.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** /**
 437:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 438:Core/Src/main.c ****   * @param None
 439:Core/Src/main.c ****   * @retval None
 440:Core/Src/main.c ****   */
 441:Core/Src/main.c **** static void MX_SPI1_Init(void)
 442:Core/Src/main.c **** {
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 451:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 452:Core/Src/main.c ****   hspi1.Instance = SPI1;
 453:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 454:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 455:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 456:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 457:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 458:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 459:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 460:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 461:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 462:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 463:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 464:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** }
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** /**
 475:Core/Src/main.c ****   * @brief USART1 Initialization Function
 476:Core/Src/main.c ****   * @param None
 477:Core/Src/main.c ****   * @retval None
 478:Core/Src/main.c ****   */
 479:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 480:Core/Src/main.c **** {
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 487:Core/Src/main.c **** 
ARM GAS  /tmp/cclLRy0J.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 489:Core/Src/main.c ****   huart1.Instance = USART1;
 490:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 491:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 492:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 493:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 494:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 495:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 496:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 497:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 498:Core/Src/main.c ****   {
 499:Core/Src/main.c ****     Error_Handler();
 500:Core/Src/main.c ****   }
 501:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** /**
 508:Core/Src/main.c ****   * @brief USART2 Initialization Function
 509:Core/Src/main.c ****   * @param None
 510:Core/Src/main.c ****   * @retval None
 511:Core/Src/main.c ****   */
 512:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 513:Core/Src/main.c **** {
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 522:Core/Src/main.c ****   huart2.Instance = USART2;
 523:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 524:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 525:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 526:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 527:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 528:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 529:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 530:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 531:Core/Src/main.c ****   {
 532:Core/Src/main.c ****     Error_Handler();
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** }
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** /**
 541:Core/Src/main.c ****   * Enable DMA controller clock
 542:Core/Src/main.c ****   */
 543:Core/Src/main.c **** static void MX_DMA_Init(void)
 544:Core/Src/main.c **** {
ARM GAS  /tmp/cclLRy0J.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* DMA controller clock enable */
 547:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 548:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /* DMA interrupt init */
 551:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 552:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 553:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 554:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 555:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 556:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 557:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 558:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 559:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 560:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 561:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 562:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 563:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 564:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 565:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 566:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 567:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 568:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 569:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 570:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
 571:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** }
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** /**
 576:Core/Src/main.c ****   * @brief GPIO Initialization Function
 577:Core/Src/main.c ****   * @param None
 578:Core/Src/main.c ****   * @retval None
 579:Core/Src/main.c ****   */
 580:Core/Src/main.c **** static void MX_GPIO_Init(void)
 581:Core/Src/main.c **** {
  28              		.loc 1 581 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 32
  35              		.cfi_offset 4, -32
  36              		.cfi_offset 5, -28
  37              		.cfi_offset 6, -24
  38              		.cfi_offset 7, -20
  39              		.cfi_offset 8, -16
  40              		.cfi_offset 9, -12
  41              		.cfi_offset 10, -8
  42              		.cfi_offset 14, -4
  43 0004 8AB0     		sub	sp, sp, #40
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 72
 582:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 582 3 view .LVU1
ARM GAS  /tmp/cclLRy0J.s 			page 12


  47              		.loc 1 582 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0594     		str	r4, [sp, #20]
  50 000a 0694     		str	r4, [sp, #24]
  51 000c 0794     		str	r4, [sp, #28]
  52 000e 0894     		str	r4, [sp, #32]
  53 0010 0994     		str	r4, [sp, #36]
 583:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 584:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 587:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 587 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 587 3 view .LVU4
  57 0012 0094     		str	r4, [sp]
  58              		.loc 1 587 3 view .LVU5
  59 0014 484B     		ldr	r3, .L3
  60 0016 1A6B     		ldr	r2, [r3, #48]
  61 0018 42F00402 		orr	r2, r2, #4
  62 001c 1A63     		str	r2, [r3, #48]
  63              		.loc 1 587 3 view .LVU6
  64 001e 1A6B     		ldr	r2, [r3, #48]
  65 0020 02F00402 		and	r2, r2, #4
  66 0024 0092     		str	r2, [sp]
  67              		.loc 1 587 3 view .LVU7
  68 0026 009A     		ldr	r2, [sp]
  69              	.LBE4:
  70              		.loc 1 587 3 view .LVU8
 588:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  71              		.loc 1 588 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 588 3 view .LVU10
  74 0028 0194     		str	r4, [sp, #4]
  75              		.loc 1 588 3 view .LVU11
  76 002a 1A6B     		ldr	r2, [r3, #48]
  77 002c 42F08002 		orr	r2, r2, #128
  78 0030 1A63     		str	r2, [r3, #48]
  79              		.loc 1 588 3 view .LVU12
  80 0032 1A6B     		ldr	r2, [r3, #48]
  81 0034 02F08002 		and	r2, r2, #128
  82 0038 0192     		str	r2, [sp, #4]
  83              		.loc 1 588 3 view .LVU13
  84 003a 019A     		ldr	r2, [sp, #4]
  85              	.LBE5:
  86              		.loc 1 588 3 view .LVU14
 589:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  87              		.loc 1 589 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 589 3 view .LVU16
  90 003c 0294     		str	r4, [sp, #8]
  91              		.loc 1 589 3 view .LVU17
  92 003e 1A6B     		ldr	r2, [r3, #48]
  93 0040 42F00102 		orr	r2, r2, #1
  94 0044 1A63     		str	r2, [r3, #48]
  95              		.loc 1 589 3 view .LVU18
  96 0046 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cclLRy0J.s 			page 13


  97 0048 02F00102 		and	r2, r2, #1
  98 004c 0292     		str	r2, [sp, #8]
  99              		.loc 1 589 3 view .LVU19
 100 004e 029A     		ldr	r2, [sp, #8]
 101              	.LBE6:
 102              		.loc 1 589 3 view .LVU20
 590:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 103              		.loc 1 590 3 view .LVU21
 104              	.LBB7:
 105              		.loc 1 590 3 view .LVU22
 106 0050 0394     		str	r4, [sp, #12]
 107              		.loc 1 590 3 view .LVU23
 108 0052 1A6B     		ldr	r2, [r3, #48]
 109 0054 42F00202 		orr	r2, r2, #2
 110 0058 1A63     		str	r2, [r3, #48]
 111              		.loc 1 590 3 view .LVU24
 112 005a 1A6B     		ldr	r2, [r3, #48]
 113 005c 02F00202 		and	r2, r2, #2
 114 0060 0392     		str	r2, [sp, #12]
 115              		.loc 1 590 3 view .LVU25
 116 0062 039A     		ldr	r2, [sp, #12]
 117              	.LBE7:
 118              		.loc 1 590 3 view .LVU26
 591:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 119              		.loc 1 591 3 view .LVU27
 120              	.LBB8:
 121              		.loc 1 591 3 view .LVU28
 122 0064 0494     		str	r4, [sp, #16]
 123              		.loc 1 591 3 view .LVU29
 124 0066 1A6B     		ldr	r2, [r3, #48]
 125 0068 42F00802 		orr	r2, r2, #8
 126 006c 1A63     		str	r2, [r3, #48]
 127              		.loc 1 591 3 view .LVU30
 128 006e 1B6B     		ldr	r3, [r3, #48]
 129 0070 03F00803 		and	r3, r3, #8
 130 0074 0493     		str	r3, [sp, #16]
 131              		.loc 1 591 3 view .LVU31
 132 0076 049B     		ldr	r3, [sp, #16]
 133              	.LBE8:
 134              		.loc 1 591 3 view .LVU32
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 594:Core/Src/main.c ****   HAL_GPIO_WritePin(GPS_RST_GPIO_Port, GPS_RST_Pin, GPIO_PIN_RESET);
 135              		.loc 1 594 3 view .LVU33
 136 0078 DFF8C880 		ldr	r8, .L3+12
 137 007c 2246     		mov	r2, r4
 138 007e 4FF40051 		mov	r1, #8192
 139 0082 4046     		mov	r0, r8
 140 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL0:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 597:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TIMEPULSE_Pin|SAFEBOOT_Pin, GPIO_PIN_RESET);
 142              		.loc 1 597 3 view .LVU34
 143 0088 2C4F     		ldr	r7, .L3+4
 144 008a 2246     		mov	r2, r4
 145 008c 6021     		movs	r1, #96
ARM GAS  /tmp/cclLRy0J.s 			page 14


 146 008e 3846     		mov	r0, r7
 147 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL1:
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 600:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, USR_LED1_Pin|USR_LED2_Pin|EEPROM_WP_Pin, GPIO_PIN_RESET);
 149              		.loc 1 600 3 view .LVU35
 150 0094 2A4E     		ldr	r6, .L3+8
 151 0096 2246     		mov	r2, r4
 152 0098 41F20301 		movw	r1, #4099
 153 009c 3046     		mov	r0, r6
 154 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL2:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 603:Core/Src/main.c ****   HAL_GPIO_WritePin(BMP_CS_GPIO_Port, BMP_CS_Pin, GPIO_PIN_SET);
 156              		.loc 1 603 3 view .LVU36
 157 00a2 DFF8A490 		ldr	r9, .L3+16
 158 00a6 0122     		movs	r2, #1
 159 00a8 0421     		movs	r1, #4
 160 00aa 4846     		mov	r0, r9
 161 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 162              	.LVL3:
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /*Configure GPIO pin : GPS_RST_Pin */
 606:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPS_RST_Pin;
 163              		.loc 1 606 3 view .LVU37
 164              		.loc 1 606 23 is_stmt 0 view .LVU38
 165 00b0 4FF4005A 		mov	r10, #8192
 166 00b4 CDF814A0 		str	r10, [sp, #20]
 607:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 167              		.loc 1 607 3 is_stmt 1 view .LVU39
 168              		.loc 1 607 24 is_stmt 0 view .LVU40
 169 00b8 0125     		movs	r5, #1
 170 00ba 0695     		str	r5, [sp, #24]
 608:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 608 3 is_stmt 1 view .LVU41
 172              		.loc 1 608 24 is_stmt 0 view .LVU42
 173 00bc 0794     		str	r4, [sp, #28]
 609:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 174              		.loc 1 609 3 is_stmt 1 view .LVU43
 175              		.loc 1 609 25 is_stmt 0 view .LVU44
 176 00be 0894     		str	r4, [sp, #32]
 610:Core/Src/main.c ****   HAL_GPIO_Init(GPS_RST_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 1 610 3 is_stmt 1 view .LVU45
 178 00c0 05A9     		add	r1, sp, #20
 179 00c2 4046     		mov	r0, r8
 180 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL4:
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /*Configure GPIO pin : PC14 */
 613:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 182              		.loc 1 613 3 view .LVU46
 183              		.loc 1 613 23 is_stmt 0 view .LVU47
 184 00c8 4FF48043 		mov	r3, #16384
 185 00cc 0593     		str	r3, [sp, #20]
 614:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/cclLRy0J.s 			page 15


 186              		.loc 1 614 3 is_stmt 1 view .LVU48
 187              		.loc 1 614 24 is_stmt 0 view .LVU49
 188 00ce 0694     		str	r4, [sp, #24]
 615:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 189              		.loc 1 615 3 is_stmt 1 view .LVU50
 190              		.loc 1 615 24 is_stmt 0 view .LVU51
 191 00d0 0794     		str	r4, [sp, #28]
 616:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 192              		.loc 1 616 3 is_stmt 1 view .LVU52
 193 00d2 05A9     		add	r1, sp, #20
 194 00d4 4046     		mov	r0, r8
 195 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL5:
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /*Configure GPIO pin : GPS_INT_Pin */
 619:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPS_INT_Pin;
 197              		.loc 1 619 3 view .LVU53
 198              		.loc 1 619 23 is_stmt 0 view .LVU54
 199 00da 0223     		movs	r3, #2
 200 00dc 0593     		str	r3, [sp, #20]
 620:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 201              		.loc 1 620 3 is_stmt 1 view .LVU55
 202              		.loc 1 620 24 is_stmt 0 view .LVU56
 203 00de 0694     		str	r4, [sp, #24]
 621:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 621 3 is_stmt 1 view .LVU57
 205              		.loc 1 621 24 is_stmt 0 view .LVU58
 206 00e0 0794     		str	r4, [sp, #28]
 622:Core/Src/main.c ****   HAL_GPIO_Init(GPS_INT_GPIO_Port, &GPIO_InitStruct);
 207              		.loc 1 622 3 is_stmt 1 view .LVU59
 208 00e2 05A9     		add	r1, sp, #20
 209 00e4 3846     		mov	r0, r7
 210 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 211              	.LVL6:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /*Configure GPIO pins : TIMEPULSE_Pin SAFEBOOT_Pin */
 625:Core/Src/main.c ****   GPIO_InitStruct.Pin = TIMEPULSE_Pin|SAFEBOOT_Pin;
 212              		.loc 1 625 3 view .LVU60
 213              		.loc 1 625 23 is_stmt 0 view .LVU61
 214 00ea 6023     		movs	r3, #96
 215 00ec 0593     		str	r3, [sp, #20]
 626:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 216              		.loc 1 626 3 is_stmt 1 view .LVU62
 217              		.loc 1 626 24 is_stmt 0 view .LVU63
 218 00ee 0695     		str	r5, [sp, #24]
 627:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 219              		.loc 1 627 3 is_stmt 1 view .LVU64
 220              		.loc 1 627 24 is_stmt 0 view .LVU65
 221 00f0 0794     		str	r4, [sp, #28]
 628:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 222              		.loc 1 628 3 is_stmt 1 view .LVU66
 223              		.loc 1 628 25 is_stmt 0 view .LVU67
 224 00f2 0894     		str	r4, [sp, #32]
 629:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 225              		.loc 1 629 3 is_stmt 1 view .LVU68
 226 00f4 05A9     		add	r1, sp, #20
 227 00f6 3846     		mov	r0, r7
ARM GAS  /tmp/cclLRy0J.s 			page 16


 228 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 229              	.LVL7:
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /*Configure GPIO pins : USR_LED1_Pin USR_LED2_Pin EEPROM_WP_Pin */
 632:Core/Src/main.c ****   GPIO_InitStruct.Pin = USR_LED1_Pin|USR_LED2_Pin|EEPROM_WP_Pin;
 230              		.loc 1 632 3 view .LVU69
 231              		.loc 1 632 23 is_stmt 0 view .LVU70
 232 00fc 41F20303 		movw	r3, #4099
 233 0100 0593     		str	r3, [sp, #20]
 633:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 234              		.loc 1 633 3 is_stmt 1 view .LVU71
 235              		.loc 1 633 24 is_stmt 0 view .LVU72
 236 0102 0695     		str	r5, [sp, #24]
 634:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 237              		.loc 1 634 3 is_stmt 1 view .LVU73
 238              		.loc 1 634 24 is_stmt 0 view .LVU74
 239 0104 0794     		str	r4, [sp, #28]
 635:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 240              		.loc 1 635 3 is_stmt 1 view .LVU75
 241              		.loc 1 635 25 is_stmt 0 view .LVU76
 242 0106 0894     		str	r4, [sp, #32]
 636:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 243              		.loc 1 636 3 is_stmt 1 view .LVU77
 244 0108 05A9     		add	r1, sp, #20
 245 010a 3046     		mov	r0, r6
 246 010c FFF7FEFF 		bl	HAL_GPIO_Init
 247              	.LVL8:
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /*Configure GPIO pin : PB13 */
 639:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 248              		.loc 1 639 3 view .LVU78
 249              		.loc 1 639 23 is_stmt 0 view .LVU79
 250 0110 CDF814A0 		str	r10, [sp, #20]
 640:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 251              		.loc 1 640 3 is_stmt 1 view .LVU80
 252              		.loc 1 640 24 is_stmt 0 view .LVU81
 253 0114 0694     		str	r4, [sp, #24]
 641:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 254              		.loc 1 641 3 is_stmt 1 view .LVU82
 255              		.loc 1 641 24 is_stmt 0 view .LVU83
 256 0116 0794     		str	r4, [sp, #28]
 642:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 257              		.loc 1 642 3 is_stmt 1 view .LVU84
 258 0118 05A9     		add	r1, sp, #20
 259 011a 3046     		mov	r0, r6
 260 011c FFF7FEFF 		bl	HAL_GPIO_Init
 261              	.LVL9:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /*Configure GPIO pin : BMP_CS_Pin */
 645:Core/Src/main.c ****   GPIO_InitStruct.Pin = BMP_CS_Pin;
 262              		.loc 1 645 3 view .LVU85
 263              		.loc 1 645 23 is_stmt 0 view .LVU86
 264 0120 0423     		movs	r3, #4
 265 0122 0593     		str	r3, [sp, #20]
 646:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 266              		.loc 1 646 3 is_stmt 1 view .LVU87
 267              		.loc 1 646 24 is_stmt 0 view .LVU88
ARM GAS  /tmp/cclLRy0J.s 			page 17


 268 0124 0695     		str	r5, [sp, #24]
 647:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 269              		.loc 1 647 3 is_stmt 1 view .LVU89
 270              		.loc 1 647 24 is_stmt 0 view .LVU90
 271 0126 0794     		str	r4, [sp, #28]
 648:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 272              		.loc 1 648 3 is_stmt 1 view .LVU91
 273              		.loc 1 648 25 is_stmt 0 view .LVU92
 274 0128 0894     		str	r4, [sp, #32]
 649:Core/Src/main.c ****   HAL_GPIO_Init(BMP_CS_GPIO_Port, &GPIO_InitStruct);
 275              		.loc 1 649 3 is_stmt 1 view .LVU93
 276 012a 05A9     		add	r1, sp, #20
 277 012c 4846     		mov	r0, r9
 278 012e FFF7FEFF 		bl	HAL_GPIO_Init
 279              	.LVL10:
 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 652:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 653:Core/Src/main.c **** }
 280              		.loc 1 653 1 is_stmt 0 view .LVU94
 281 0132 0AB0     		add	sp, sp, #40
 282              	.LCFI2:
 283              		.cfi_def_cfa_offset 32
 284              		@ sp needed
 285 0134 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 286              	.L4:
 287              		.align	2
 288              	.L3:
 289 0138 00380240 		.word	1073887232
 290 013c 00000240 		.word	1073872896
 291 0140 00040240 		.word	1073873920
 292 0144 00080240 		.word	1073874944
 293 0148 000C0240 		.word	1073875968
 294              		.cfi_endproc
 295              	.LFE146:
 297              		.section	.text.MX_DMA_Init,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	MX_DMA_Init:
 304              	.LFB145:
 544:Core/Src/main.c **** 
 305              		.loc 1 544 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 10B5     		push	{r4, lr}
 310              	.LCFI3:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 16
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 317              		.loc 1 547 3 view .LVU96
ARM GAS  /tmp/cclLRy0J.s 			page 18


 318              	.LBB9:
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 319              		.loc 1 547 3 view .LVU97
 320 0004 0024     		movs	r4, #0
 321 0006 0094     		str	r4, [sp]
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 322              		.loc 1 547 3 view .LVU98
 323 0008 264B     		ldr	r3, .L7
 324 000a 1A6B     		ldr	r2, [r3, #48]
 325 000c 42F40012 		orr	r2, r2, #2097152
 326 0010 1A63     		str	r2, [r3, #48]
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 327              		.loc 1 547 3 view .LVU99
 328 0012 1A6B     		ldr	r2, [r3, #48]
 329 0014 02F40012 		and	r2, r2, #2097152
 330 0018 0092     		str	r2, [sp]
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 331              		.loc 1 547 3 view .LVU100
 332 001a 009A     		ldr	r2, [sp]
 333              	.LBE9:
 547:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 334              		.loc 1 547 3 view .LVU101
 548:Core/Src/main.c **** 
 335              		.loc 1 548 3 view .LVU102
 336              	.LBB10:
 548:Core/Src/main.c **** 
 337              		.loc 1 548 3 view .LVU103
 338 001c 0194     		str	r4, [sp, #4]
 548:Core/Src/main.c **** 
 339              		.loc 1 548 3 view .LVU104
 340 001e 1A6B     		ldr	r2, [r3, #48]
 341 0020 42F48002 		orr	r2, r2, #4194304
 342 0024 1A63     		str	r2, [r3, #48]
 548:Core/Src/main.c **** 
 343              		.loc 1 548 3 view .LVU105
 344 0026 1B6B     		ldr	r3, [r3, #48]
 345 0028 03F48003 		and	r3, r3, #4194304
 346 002c 0193     		str	r3, [sp, #4]
 548:Core/Src/main.c **** 
 347              		.loc 1 548 3 view .LVU106
 348 002e 019B     		ldr	r3, [sp, #4]
 349              	.LBE10:
 548:Core/Src/main.c **** 
 350              		.loc 1 548 3 view .LVU107
 552:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 351              		.loc 1 552 3 view .LVU108
 352 0030 2246     		mov	r2, r4
 353 0032 2146     		mov	r1, r4
 354 0034 0C20     		movs	r0, #12
 355 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 356              	.LVL11:
 553:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 357              		.loc 1 553 3 view .LVU109
 358 003a 0C20     		movs	r0, #12
 359 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 360              	.LVL12:
 555:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
ARM GAS  /tmp/cclLRy0J.s 			page 19


 361              		.loc 1 555 3 view .LVU110
 362 0040 2246     		mov	r2, r4
 363 0042 2146     		mov	r1, r4
 364 0044 0F20     		movs	r0, #15
 365 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 366              	.LVL13:
 556:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 367              		.loc 1 556 3 view .LVU111
 368 004a 0F20     		movs	r0, #15
 369 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 370              	.LVL14:
 558:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 371              		.loc 1 558 3 view .LVU112
 372 0050 2246     		mov	r2, r4
 373 0052 2146     		mov	r1, r4
 374 0054 1020     		movs	r0, #16
 375 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 376              	.LVL15:
 559:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 377              		.loc 1 559 3 view .LVU113
 378 005a 1020     		movs	r0, #16
 379 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 380              	.LVL16:
 561:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 381              		.loc 1 561 3 view .LVU114
 382 0060 2246     		mov	r2, r4
 383 0062 2146     		mov	r1, r4
 384 0064 1120     		movs	r0, #17
 385 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 386              	.LVL17:
 562:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 387              		.loc 1 562 3 view .LVU115
 388 006a 1120     		movs	r0, #17
 389 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 390              	.LVL18:
 564:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 391              		.loc 1 564 3 view .LVU116
 392 0070 2246     		mov	r2, r4
 393 0072 2146     		mov	r1, r4
 394 0074 3820     		movs	r0, #56
 395 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 396              	.LVL19:
 565:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 397              		.loc 1 565 3 view .LVU117
 398 007a 3820     		movs	r0, #56
 399 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 400              	.LVL20:
 567:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 401              		.loc 1 567 3 view .LVU118
 402 0080 2246     		mov	r2, r4
 403 0082 2146     		mov	r1, r4
 404 0084 3B20     		movs	r0, #59
 405 0086 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 406              	.LVL21:
 568:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 407              		.loc 1 568 3 view .LVU119
 408 008a 3B20     		movs	r0, #59
ARM GAS  /tmp/cclLRy0J.s 			page 20


 409 008c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 410              	.LVL22:
 570:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 411              		.loc 1 570 3 view .LVU120
 412 0090 2246     		mov	r2, r4
 413 0092 2146     		mov	r1, r4
 414 0094 4620     		movs	r0, #70
 415 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 416              	.LVL23:
 571:Core/Src/main.c **** 
 417              		.loc 1 571 3 view .LVU121
 418 009a 4620     		movs	r0, #70
 419 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 420              	.LVL24:
 573:Core/Src/main.c **** 
 421              		.loc 1 573 1 is_stmt 0 view .LVU122
 422 00a0 02B0     		add	sp, sp, #8
 423              	.LCFI5:
 424              		.cfi_def_cfa_offset 8
 425              		@ sp needed
 426 00a2 10BD     		pop	{r4, pc}
 427              	.L8:
 428              		.align	2
 429              	.L7:
 430 00a4 00380240 		.word	1073887232
 431              		.cfi_endproc
 432              	.LFE145:
 434              		.section	.rodata.i2c_scan.str1.4,"aMS",%progbits,1
 435              		.align	2
 436              	.LC2:
 437 0000 30782558 		.ascii	"0x%X\000"
 437      00
 438 0005 000000   		.align	2
 439              	.LC3:
 440 0008 0D0A00   		.ascii	"\015\012\000"
 441 000b 00       		.align	2
 442              	.LC0:
 443 000c 53746172 		.ascii	"Starting I2C Scanning: \015\012\000"
 443      74696E67 
 443      20493243 
 443      20536361 
 443      6E6E696E 
 444 0026 0000     		.align	2
 445              	.LC1:
 446 0028 446F6E65 		.ascii	"Done! \015\012\015\012\000"
 446      21200D0A 
 446      0D0A00
 447              		.section	.text.i2c_scan,"ax",%progbits
 448              		.align	1
 449              		.global	i2c_scan
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	i2c_scan:
 455              	.LFB133:
  87:Core/Src/main.c ****   uint8_t Buffer[25] = {0};
 456              		.loc 1 87 1 is_stmt 1 view -0
ARM GAS  /tmp/cclLRy0J.s 			page 21


 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 72
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 30B5     		push	{r4, r5, lr}
 461              	.LCFI6:
 462              		.cfi_def_cfa_offset 12
 463              		.cfi_offset 4, -12
 464              		.cfi_offset 5, -8
 465              		.cfi_offset 14, -4
 466 0002 93B0     		sub	sp, sp, #76
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 88
  88:Core/Src/main.c ****   uint8_t Space[] = " - ";
 469              		.loc 1 88 3 view .LVU124
  88:Core/Src/main.c ****   uint8_t Space[] = " - ";
 470              		.loc 1 88 11 is_stmt 0 view .LVU125
 471 0004 0023     		movs	r3, #0
 472 0006 0B93     		str	r3, [sp, #44]
 473 0008 0C93     		str	r3, [sp, #48]
 474 000a 0D93     		str	r3, [sp, #52]
 475 000c 0E93     		str	r3, [sp, #56]
 476 000e 0F93     		str	r3, [sp, #60]
 477 0010 1093     		str	r3, [sp, #64]
 478 0012 8DF84430 		strb	r3, [sp, #68]
  89:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
 479              		.loc 1 89 3 is_stmt 1 view .LVU126
  89:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
 480              		.loc 1 89 11 is_stmt 0 view .LVU127
 481 0016 2A4B     		ldr	r3, .L18
 482 0018 0A93     		str	r3, [sp, #40]
  90:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
 483              		.loc 1 90 3 is_stmt 1 view .LVU128
  90:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
 484              		.loc 1 90 11 is_stmt 0 view .LVU129
 485 001a 03AC     		add	r4, sp, #12
 486 001c 294D     		ldr	r5, .L18+4
 487 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 488 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 489 0022 95E80700 		ldm	r5, {r0, r1, r2}
 490 0026 03C4     		stmia	r4!, {r0, r1}
 491 0028 2280     		strh	r2, [r4]	@ movhi
  91:Core/Src/main.c **** 
 492              		.loc 1 91 3 is_stmt 1 view .LVU130
  91:Core/Src/main.c **** 
 493              		.loc 1 91 11 is_stmt 0 view .LVU131
 494 002a 274A     		ldr	r2, .L18+8
 495 002c 6B46     		mov	r3, sp
 496 002e 07CA     		ldm	r2, {r0, r1, r2}
 497 0030 03C3     		stmia	r3!, {r0, r1}
 498 0032 23F8022B 		strh	r2, [r3], #2	@ movhi
 499 0036 120C     		lsrs	r2, r2, #16
 500 0038 1A70     		strb	r2, [r3]
  94:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, StartMSG, sizeof(StartMSG), HAL_MAX_DELAY);
 501              		.loc 1 94 3 is_stmt 1 view .LVU132
  95:Core/Src/main.c ****   for (uint8_t i = 1; i < 128; i++)
 502              		.loc 1 95 3 view .LVU133
 503 003a 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cclLRy0J.s 			page 22


 504 003e 1A22     		movs	r2, #26
 505 0040 03A9     		add	r1, sp, #12
 506 0042 2248     		ldr	r0, .L18+12
 507 0044 FFF7FEFF 		bl	HAL_UART_Transmit
 508              	.LVL25:
  96:Core/Src/main.c ****   {
 509              		.loc 1 96 3 view .LVU134
 510              	.LBB11:
  96:Core/Src/main.c ****   {
 511              		.loc 1 96 8 view .LVU135
  96:Core/Src/main.c ****   {
 512              		.loc 1 96 16 is_stmt 0 view .LVU136
 513 0048 0124     		movs	r4, #1
  96:Core/Src/main.c ****   {
 514              		.loc 1 96 3 view .LVU137
 515 004a 10E0     		b	.L10
 516              	.LVL26:
 517              	.L11:
 103:Core/Src/main.c ****     {
 518              		.loc 1 103 10 is_stmt 1 view .LVU138
 105:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 519              		.loc 1 105 7 view .LVU139
 520 004c 2246     		mov	r2, r4
 521 004e 2049     		ldr	r1, .L18+16
 522 0050 0BA8     		add	r0, sp, #44
 523              	.LVL27:
 105:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 524              		.loc 1 105 7 is_stmt 0 view .LVU140
 525 0052 FFF7FEFF 		bl	sprintf
 526              	.LVL28:
 106:Core/Src/main.c ****     }
 527              		.loc 1 106 7 is_stmt 1 view .LVU141
 528 0056 4FF0FF33 		mov	r3, #-1
 529 005a 1922     		movs	r2, #25
 530 005c 0BA9     		add	r1, sp, #44
 531 005e 1B48     		ldr	r0, .L18+12
 532 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 533              	.LVL29:
 534              	.L12:
 109:Core/Src/main.c ****     {
 535              		.loc 1 109 5 view .LVU142
 109:Core/Src/main.c ****     {
 536              		.loc 1 109 7 is_stmt 0 view .LVU143
 537 0064 14F00F0F 		tst	r4, #15
 538 0068 14D0     		beq	.L16
 539              	.L13:
  96:Core/Src/main.c ****   {
 540              		.loc 1 96 32 is_stmt 1 discriminator 2 view .LVU144
  96:Core/Src/main.c ****   {
 541              		.loc 1 96 33 is_stmt 0 discriminator 2 view .LVU145
 542 006a 0134     		adds	r4, r4, #1
 543              	.LVL30:
  96:Core/Src/main.c ****   {
 544              		.loc 1 96 33 discriminator 2 view .LVU146
 545 006c E4B2     		uxtb	r4, r4
 546              	.LVL31:
 547              	.L10:
ARM GAS  /tmp/cclLRy0J.s 			page 23


  96:Core/Src/main.c ****   {
 548              		.loc 1 96 23 is_stmt 1 discriminator 1 view .LVU147
  96:Core/Src/main.c ****   {
 549              		.loc 1 96 3 is_stmt 0 discriminator 1 view .LVU148
 550 006e 14F0800F 		tst	r4, #128
 551 0072 1CD1     		bne	.L17
  98:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
 552              		.loc 1 98 5 is_stmt 1 view .LVU149
  98:Core/Src/main.c ****     if (ret != HAL_OK) /* No ACK Received At That Address */
 553              		.loc 1 98 11 is_stmt 0 view .LVU150
 554 0074 0523     		movs	r3, #5
 555 0076 0322     		movs	r2, #3
 556 0078 6100     		lsls	r1, r4, #1
 557 007a 1648     		ldr	r0, .L18+20
 558 007c FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 559              	.LVL32:
  99:Core/Src/main.c ****     {
 560              		.loc 1 99 5 is_stmt 1 view .LVU151
  99:Core/Src/main.c ****     {
 561              		.loc 1 99 8 is_stmt 0 view .LVU152
 562 0080 0028     		cmp	r0, #0
 563 0082 E3D0     		beq	.L11
 101:Core/Src/main.c ****     }
 564              		.loc 1 101 7 is_stmt 1 view .LVU153
 565 0084 4FF0FF33 		mov	r3, #-1
 566 0088 0422     		movs	r2, #4
 567 008a 0AA9     		add	r1, sp, #40
 568 008c 0F48     		ldr	r0, .L18+12
 569              	.LVL33:
 101:Core/Src/main.c ****     }
 570              		.loc 1 101 7 is_stmt 0 view .LVU154
 571 008e FFF7FEFF 		bl	HAL_UART_Transmit
 572              	.LVL34:
 573 0092 E7E7     		b	.L12
 574              	.L16:
 111:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), HAL_MAX_DELAY);
 575              		.loc 1 111 7 is_stmt 1 view .LVU155
 576 0094 2246     		mov	r2, r4
 577 0096 1049     		ldr	r1, .L18+24
 578 0098 0BA8     		add	r0, sp, #44
 579 009a FFF7FEFF 		bl	sprintf
 580              	.LVL35:
 112:Core/Src/main.c **** 
 581              		.loc 1 112 7 view .LVU156
 582 009e 4FF0FF33 		mov	r3, #-1
 583 00a2 1922     		movs	r2, #25
 584 00a4 0BA9     		add	r1, sp, #44
 585 00a6 0948     		ldr	r0, .L18+12
 586 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 587              	.LVL36:
 588 00ac DDE7     		b	.L13
 589              	.L17:
 112:Core/Src/main.c **** 
 590              		.loc 1 112 7 is_stmt 0 view .LVU157
 591              	.LBE11:
 116:Core/Src/main.c ****   /*--[ Scanning Done ]--*/
 592              		.loc 1 116 3 is_stmt 1 view .LVU158
ARM GAS  /tmp/cclLRy0J.s 			page 24


 593 00ae 4FF0FF33 		mov	r3, #-1
 594 00b2 0B22     		movs	r2, #11
 595 00b4 6946     		mov	r1, sp
 596 00b6 0548     		ldr	r0, .L18+12
 597 00b8 FFF7FEFF 		bl	HAL_UART_Transmit
 598              	.LVL37:
 118:Core/Src/main.c **** void print_bmp280_id()
 599              		.loc 1 118 1 is_stmt 0 view .LVU159
 600 00bc 13B0     		add	sp, sp, #76
 601              	.LCFI8:
 602              		.cfi_def_cfa_offset 12
 603              		@ sp needed
 604 00be 30BD     		pop	{r4, r5, pc}
 605              	.LVL38:
 606              	.L19:
 118:Core/Src/main.c **** void print_bmp280_id()
 607              		.loc 1 118 1 view .LVU160
 608              		.align	2
 609              	.L18:
 610 00c0 202D2000 		.word	2108704
 611 00c4 0C000000 		.word	.LC0
 612 00c8 28000000 		.word	.LC1
 613 00cc 00000000 		.word	.LANCHOR0
 614 00d0 00000000 		.word	.LC2
 615 00d4 00000000 		.word	.LANCHOR1
 616 00d8 08000000 		.word	.LC3
 617              		.cfi_endproc
 618              	.LFE133:
 620              		.section	.rodata.print_bmp280_id.str1.4,"aMS",%progbits,1
 621              		.align	2
 622              	.LC4:
 623 0000 424D5032 		.ascii	"BMP280 ID:%02X\015\012\000"
 623      38302049 
 623      443A2530 
 623      32580D0A 
 623      00
 624              		.section	.text.print_bmp280_id,"ax",%progbits
 625              		.align	1
 626              		.global	print_bmp280_id
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	print_bmp280_id:
 632              	.LFB134:
 120:Core/Src/main.c ****   uint8_t id;
 633              		.loc 1 120 1 is_stmt 1 view -0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 24
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637 0000 00B5     		push	{lr}
 638              	.LCFI9:
 639              		.cfi_def_cfa_offset 4
 640              		.cfi_offset 14, -4
 641 0002 87B0     		sub	sp, sp, #28
 642              	.LCFI10:
 643              		.cfi_def_cfa_offset 32
 121:Core/Src/main.c ****   uint8_t ret = bmp280_getid(&id);
ARM GAS  /tmp/cclLRy0J.s 			page 25


 644              		.loc 1 121 3 view .LVU162
 122:Core/Src/main.c **** 
 645              		.loc 1 122 3 view .LVU163
 122:Core/Src/main.c **** 
 646              		.loc 1 122 17 is_stmt 0 view .LVU164
 647 0004 0DF11700 		add	r0, sp, #23
 648 0008 FFF7FEFF 		bl	bmp280_getid
 649              	.LVL39:
 124:Core/Src/main.c **** 
 650              		.loc 1 124 3 is_stmt 1 view .LVU165
 124:Core/Src/main.c **** 
 651              		.loc 1 124 11 is_stmt 0 view .LVU166
 652 000c 0023     		movs	r3, #0
 653 000e 0193     		str	r3, [sp, #4]
 654 0010 0293     		str	r3, [sp, #8]
 655 0012 0393     		str	r3, [sp, #12]
 656 0014 0493     		str	r3, [sp, #16]
 126:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buf, sizeof(buf), 10000);
 657              		.loc 1 126 3 is_stmt 1 view .LVU167
 658 0016 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 659 001a 074A     		ldr	r2, .L22
 660 001c 1021     		movs	r1, #16
 661 001e 01A8     		add	r0, sp, #4
 662 0020 FFF7FEFF 		bl	snprintf
 663              	.LVL40:
 127:Core/Src/main.c **** }
 664              		.loc 1 127 3 view .LVU168
 665 0024 42F21073 		movw	r3, #10000
 666 0028 1022     		movs	r2, #16
 667 002a 01A9     		add	r1, sp, #4
 668 002c 0348     		ldr	r0, .L22+4
 669 002e FFF7FEFF 		bl	HAL_UART_Transmit
 670              	.LVL41:
 128:Core/Src/main.c **** 
 671              		.loc 1 128 1 is_stmt 0 view .LVU169
 672 0032 07B0     		add	sp, sp, #28
 673              	.LCFI11:
 674              		.cfi_def_cfa_offset 4
 675              		@ sp needed
 676 0034 5DF804FB 		ldr	pc, [sp], #4
 677              	.L23:
 678              		.align	2
 679              	.L22:
 680 0038 00000000 		.word	.LC4
 681 003c 00000000 		.word	.LANCHOR0
 682              		.cfi_endproc
 683              	.LFE134:
 685              		.section	.rodata.print_lis2hd12_who_am_i.str1.4,"aMS",%progbits,1
 686              		.align	2
 687              	.LC5:
 688 0000 4572726F 		.ascii	"Error IMU\015\012\000"
 688      7220494D 
 688      550D0A00 
 689              		.align	2
 690              	.LC6:
 691 000c 494D5520 		.ascii	"IMU ID: %#02X\015\012\000"
 691      49443A20 
ARM GAS  /tmp/cclLRy0J.s 			page 26


 691      25233032 
 691      580D0A00 
 692              		.section	.text.print_lis2hd12_who_am_i,"ax",%progbits
 693              		.align	1
 694              		.global	print_lis2hd12_who_am_i
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 699              	print_lis2hd12_who_am_i:
 700              	.LFB135:
 131:Core/Src/main.c ****   uint8_t id;
 701              		.loc 1 131 1 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 40
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 00B5     		push	{lr}
 706              	.LCFI12:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 14, -4
 709 0002 8BB0     		sub	sp, sp, #44
 710              	.LCFI13:
 711              		.cfi_def_cfa_offset 48
 132:Core/Src/main.c **** 
 712              		.loc 1 132 3 view .LVU171
 134:Core/Src/main.c **** 
 713              		.loc 1 134 3 view .LVU172
 134:Core/Src/main.c **** 
 714              		.loc 1 134 17 is_stmt 0 view .LVU173
 715 0004 0DF12700 		add	r0, sp, #39
 716 0008 FFF7FEFF 		bl	lis2hd12_who_am_i
 717              	.LVL42:
 136:Core/Src/main.c ****   if(ret != HAL_OK)
 718              		.loc 1 136 3 is_stmt 1 view .LVU174
 136:Core/Src/main.c ****   if(ret != HAL_OK)
 719              		.loc 1 136 11 is_stmt 0 view .LVU175
 720 000c 0023     		movs	r3, #0
 721 000e 0193     		str	r3, [sp, #4]
 722 0010 0293     		str	r3, [sp, #8]
 723 0012 0393     		str	r3, [sp, #12]
 724 0014 0493     		str	r3, [sp, #16]
 725 0016 0593     		str	r3, [sp, #20]
 726 0018 0693     		str	r3, [sp, #24]
 727 001a 0793     		str	r3, [sp, #28]
 728 001c 0893     		str	r3, [sp, #32]
 137:Core/Src/main.c ****   { 
 729              		.loc 1 137 3 is_stmt 1 view .LVU176
 137:Core/Src/main.c ****   { 
 730              		.loc 1 137 5 is_stmt 0 view .LVU177
 731 001e 88B1     		cbz	r0, .L25
 139:Core/Src/main.c ****   }
 732              		.loc 1 139 5 is_stmt 1 view .LVU178
 733 0020 01AB     		add	r3, sp, #4
 734 0022 0C4A     		ldr	r2, .L28
 735 0024 07CA     		ldm	r2, {r0, r1, r2}
 736              	.LVL43:
 139:Core/Src/main.c ****   }
 737              		.loc 1 139 5 is_stmt 0 view .LVU179
ARM GAS  /tmp/cclLRy0J.s 			page 27


 738 0026 83E80700 		stm	r3, {r0, r1, r2}
 739              	.L26:
 146:Core/Src/main.c **** }
 740              		.loc 1 146 3 is_stmt 1 view .LVU180
 146:Core/Src/main.c **** }
 741              		.loc 1 146 38 is_stmt 0 view .LVU181
 742 002a 01A8     		add	r0, sp, #4
 743 002c FFF7FEFF 		bl	strlen
 744              	.LVL44:
 146:Core/Src/main.c **** }
 745              		.loc 1 146 3 view .LVU182
 746 0030 4FF0FF33 		mov	r3, #-1
 747 0034 82B2     		uxth	r2, r0
 748 0036 01A9     		add	r1, sp, #4
 749 0038 0748     		ldr	r0, .L28+4
 750 003a FFF7FEFF 		bl	HAL_UART_Transmit
 751              	.LVL45:
 147:Core/Src/main.c **** 
 752              		.loc 1 147 1 view .LVU183
 753 003e 0BB0     		add	sp, sp, #44
 754              	.LCFI14:
 755              		.cfi_remember_state
 756              		.cfi_def_cfa_offset 4
 757              		@ sp needed
 758 0040 5DF804FB 		ldr	pc, [sp], #4
 759              	.LVL46:
 760              	.L25:
 761              	.LCFI15:
 762              		.cfi_restore_state
 143:Core/Src/main.c ****   }
 763              		.loc 1 143 5 is_stmt 1 view .LVU184
 764 0044 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 765 0048 044A     		ldr	r2, .L28+8
 766 004a 2021     		movs	r1, #32
 767 004c 01A8     		add	r0, sp, #4
 768              	.LVL47:
 143:Core/Src/main.c ****   }
 769              		.loc 1 143 5 is_stmt 0 view .LVU185
 770 004e FFF7FEFF 		bl	snprintf
 771              	.LVL48:
 772 0052 EAE7     		b	.L26
 773              	.L29:
 774              		.align	2
 775              	.L28:
 776 0054 00000000 		.word	.LC5
 777 0058 00000000 		.word	.LANCHOR0
 778 005c 0C000000 		.word	.LC6
 779              		.cfi_endproc
 780              	.LFE135:
 782              		.section	.rodata.read_pressure.str1.4,"aMS",%progbits,1
 783              		.align	2
 784              	.LC7:
 785 0000 424D5032 		.ascii	"BMP280 Error\015\012\000"
 785      38302045 
 785      72726F72 
 785      0D0A00
 786 000f 00       		.align	2
ARM GAS  /tmp/cclLRy0J.s 			page 28


 787              	.LC8:
 788 0010 50726573 		.ascii	"Pressure %lu\015\012\000"
 788      73757265 
 788      20256C75 
 788      0D0A00
 789              		.section	.text.read_pressure,"ax",%progbits
 790              		.align	1
 791              		.global	read_pressure
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	read_pressure:
 797              	.LFB136:
 150:Core/Src/main.c **** 
 798              		.loc 1 150 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802 0000 10B5     		push	{r4, lr}
 803              	.LCFI16:
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 14, -4
 152:Core/Src/main.c **** 
 807              		.loc 1 152 3 view .LVU187
 154:Core/Src/main.c ****   ret = bmp280_start_press_read();
 808              		.loc 1 154 3 view .LVU188
 155:Core/Src/main.c **** 
 809              		.loc 1 155 3 view .LVU189
 155:Core/Src/main.c **** 
 810              		.loc 1 155 9 is_stmt 0 view .LVU190
 811 0002 FFF7FEFF 		bl	bmp280_start_press_read
 812              	.LVL49:
 157:Core/Src/main.c ****   {
 813              		.loc 1 157 3 is_stmt 1 view .LVU191
 157:Core/Src/main.c ****   {
 814              		.loc 1 157 5 is_stmt 0 view .LVU192
 815 0006 F0B9     		cbnz	r0, .L34
 166:Core/Src/main.c **** 
 816              		.loc 1 166 3 is_stmt 1 view .LVU193
 817 0008 6420     		movs	r0, #100
 818              	.LVL50:
 166:Core/Src/main.c **** 
 819              		.loc 1 166 3 is_stmt 0 view .LVU194
 820 000a FFF7FEFF 		bl	HAL_Delay
 821              	.LVL51:
 169:Core/Src/main.c **** 
 822              		.loc 1 169 3 is_stmt 1 view .LVU195
 169:Core/Src/main.c **** 
 823              		.loc 1 169 23 is_stmt 0 view .LVU196
 824 000e FFF7FEFF 		bl	bmp280_get_temp
 825              	.LVL52:
 826 0012 0346     		mov	r3, r0
 827              	.LVL53:
 171:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buffer, strlen((char*)buffer), HAL_MAX_DELAY);
 828              		.loc 1 171 3 is_stmt 1 view .LVU197
 829 0014 104C     		ldr	r4, .L35
ARM GAS  /tmp/cclLRy0J.s 			page 29


 830 0016 114A     		ldr	r2, .L35+4
 831 0018 2021     		movs	r1, #32
 832 001a 2046     		mov	r0, r4
 833              	.LVL54:
 171:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, buffer, strlen((char*)buffer), HAL_MAX_DELAY);
 834              		.loc 1 171 3 is_stmt 0 view .LVU198
 835 001c FFF7FEFF 		bl	snprintf
 836              	.LVL55:
 172:Core/Src/main.c **** 
 837              		.loc 1 172 3 is_stmt 1 view .LVU199
 172:Core/Src/main.c **** 
 838              		.loc 1 172 38 is_stmt 0 view .LVU200
 839 0020 2046     		mov	r0, r4
 840 0022 FFF7FEFF 		bl	strlen
 841              	.LVL56:
 172:Core/Src/main.c **** 
 842              		.loc 1 172 3 view .LVU201
 843 0026 4FF0FF33 		mov	r3, #-1
 844 002a 82B2     		uxth	r2, r0
 845 002c 2146     		mov	r1, r4
 846 002e 0C48     		ldr	r0, .L35+8
 847 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 848              	.LVL57:
 175:Core/Src/main.c **** 
 849              		.loc 1 175 3 is_stmt 1 view .LVU202
 850 0034 2046     		mov	r0, r4
 851 0036 FFF7FEFF 		bl	strlen
 852              	.LVL58:
 853 003a 0246     		mov	r2, r0
 854 003c 0021     		movs	r1, #0
 855 003e 2046     		mov	r0, r4
 856 0040 FFF7FEFF 		bl	memset
 857              	.LVL59:
 858              	.L30:
 177:Core/Src/main.c **** /* USER CODE END 0 */
 859              		.loc 1 177 1 is_stmt 0 view .LVU203
 860 0044 10BD     		pop	{r4, pc}
 861              	.LVL60:
 862              	.L34:
 159:Core/Src/main.c ****     return;
 863              		.loc 1 159 5 is_stmt 1 view .LVU204
 864 0046 074B     		ldr	r3, .L35+12
 865 0048 034C     		ldr	r4, .L35
 866 004a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 867              	.LVL61:
 159:Core/Src/main.c ****     return;
 868              		.loc 1 159 5 is_stmt 0 view .LVU205
 869 004c 07C4     		stmia	r4!, {r0, r1, r2}
 870 004e 24F8023B 		strh	r3, [r4], #2	@ movhi
 871 0052 1B0C     		lsrs	r3, r3, #16
 872 0054 2370     		strb	r3, [r4]
 160:Core/Src/main.c ****   }
 873              		.loc 1 160 5 is_stmt 1 view .LVU206
 874 0056 F5E7     		b	.L30
 875              	.L36:
 876              		.align	2
 877              	.L35:
ARM GAS  /tmp/cclLRy0J.s 			page 30


 878 0058 00000000 		.word	.LANCHOR2
 879 005c 10000000 		.word	.LC8
 880 0060 00000000 		.word	.LANCHOR0
 881 0064 00000000 		.word	.LC7
 882              		.cfi_endproc
 883              	.LFE136:
 885              		.section	.text.Error_Handler,"ax",%progbits
 886              		.align	1
 887              		.global	Error_Handler
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 892              	Error_Handler:
 893              	.LFB147:
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** /* USER CODE END 4 */
 658:Core/Src/main.c **** 
 659:Core/Src/main.c **** /**
 660:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 661:Core/Src/main.c ****   * @retval None
 662:Core/Src/main.c ****   */
 663:Core/Src/main.c **** void Error_Handler(void)
 664:Core/Src/main.c **** {
 894              		.loc 1 664 1 view -0
 895              		.cfi_startproc
 896              		@ Volatile: function does not return.
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 665:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 666:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 667:Core/Src/main.c ****   __disable_irq();
 900              		.loc 1 667 3 view .LVU208
 901              	.LBB12:
 902              	.LBI12:
 903              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/cclLRy0J.s 			page 31


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/cclLRy0J.s 			page 32


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cclLRy0J.s 			page 33


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 904              		.loc 2 140 27 view .LVU209
 905              	.LBB13:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 906              		.loc 2 142 3 view .LVU210
 907              		.syntax unified
 908              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 909 0000 72B6     		cpsid i
 910              	@ 0 "" 2
 911              		.thumb
 912              		.syntax unified
 913              	.L38:
 914              	.LBE13:
 915              	.LBE12:
 668:Core/Src/main.c ****   while (1)
 916              		.loc 1 668 3 discriminator 1 view .LVU211
 669:Core/Src/main.c ****   {
 670:Core/Src/main.c ****   }
 917              		.loc 1 670 3 discriminator 1 view .LVU212
 668:Core/Src/main.c ****   while (1)
 918              		.loc 1 668 9 discriminator 1 view .LVU213
 919 0002 FEE7     		b	.L38
 920              		.cfi_endproc
 921              	.LFE147:
 923              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 924              		.align	1
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 929              	MX_USART2_UART_Init:
 930              	.LFB144:
 513:Core/Src/main.c **** 
 931              		.loc 1 513 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 08B5     		push	{r3, lr}
 936              	.LCFI17:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 3, -8
 939              		.cfi_offset 14, -4
 522:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 940              		.loc 1 522 3 view .LVU215
 522:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 941              		.loc 1 522 19 is_stmt 0 view .LVU216
 942 0002 0A48     		ldr	r0, .L43
 943 0004 0A4B     		ldr	r3, .L43+4
 944 0006 0360     		str	r3, [r0]
 523:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 945              		.loc 1 523 3 is_stmt 1 view .LVU217
ARM GAS  /tmp/cclLRy0J.s 			page 34


 523:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 946              		.loc 1 523 24 is_stmt 0 view .LVU218
 947 0008 4FF4E133 		mov	r3, #115200
 948 000c 4360     		str	r3, [r0, #4]
 524:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 949              		.loc 1 524 3 is_stmt 1 view .LVU219
 524:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 950              		.loc 1 524 26 is_stmt 0 view .LVU220
 951 000e 0023     		movs	r3, #0
 952 0010 8360     		str	r3, [r0, #8]
 525:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 953              		.loc 1 525 3 is_stmt 1 view .LVU221
 525:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 954              		.loc 1 525 24 is_stmt 0 view .LVU222
 955 0012 C360     		str	r3, [r0, #12]
 526:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 956              		.loc 1 526 3 is_stmt 1 view .LVU223
 526:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 957              		.loc 1 526 22 is_stmt 0 view .LVU224
 958 0014 0361     		str	r3, [r0, #16]
 527:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 959              		.loc 1 527 3 is_stmt 1 view .LVU225
 527:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 960              		.loc 1 527 20 is_stmt 0 view .LVU226
 961 0016 0C22     		movs	r2, #12
 962 0018 4261     		str	r2, [r0, #20]
 528:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 963              		.loc 1 528 3 is_stmt 1 view .LVU227
 528:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 964              		.loc 1 528 25 is_stmt 0 view .LVU228
 965 001a 8361     		str	r3, [r0, #24]
 529:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 966              		.loc 1 529 3 is_stmt 1 view .LVU229
 529:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 967              		.loc 1 529 28 is_stmt 0 view .LVU230
 968 001c C361     		str	r3, [r0, #28]
 530:Core/Src/main.c ****   {
 969              		.loc 1 530 3 is_stmt 1 view .LVU231
 530:Core/Src/main.c ****   {
 970              		.loc 1 530 7 is_stmt 0 view .LVU232
 971 001e FFF7FEFF 		bl	HAL_UART_Init
 972              	.LVL62:
 530:Core/Src/main.c ****   {
 973              		.loc 1 530 6 view .LVU233
 974 0022 00B9     		cbnz	r0, .L42
 538:Core/Src/main.c **** 
 975              		.loc 1 538 1 view .LVU234
 976 0024 08BD     		pop	{r3, pc}
 977              	.L42:
 532:Core/Src/main.c ****   }
 978              		.loc 1 532 5 is_stmt 1 view .LVU235
 979 0026 FFF7FEFF 		bl	Error_Handler
 980              	.LVL63:
 981              	.L44:
 982 002a 00BF     		.align	2
 983              	.L43:
 984 002c 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/cclLRy0J.s 			page 35


 985 0030 00440040 		.word	1073759232
 986              		.cfi_endproc
 987              	.LFE144:
 989              		.section	.text.MX_SPI1_Init,"ax",%progbits
 990              		.align	1
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 995              	MX_SPI1_Init:
 996              	.LFB142:
 442:Core/Src/main.c **** 
 997              		.loc 1 442 1 view -0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001 0000 08B5     		push	{r3, lr}
 1002              	.LCFI18:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 3, -8
 1005              		.cfi_offset 14, -4
 452:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1006              		.loc 1 452 3 view .LVU237
 452:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1007              		.loc 1 452 18 is_stmt 0 view .LVU238
 1008 0002 0D48     		ldr	r0, .L49
 1009 0004 0D4B     		ldr	r3, .L49+4
 1010 0006 0360     		str	r3, [r0]
 453:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1011              		.loc 1 453 3 is_stmt 1 view .LVU239
 453:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1012              		.loc 1 453 19 is_stmt 0 view .LVU240
 1013 0008 4FF48273 		mov	r3, #260
 1014 000c 4360     		str	r3, [r0, #4]
 454:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1015              		.loc 1 454 3 is_stmt 1 view .LVU241
 454:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1016              		.loc 1 454 24 is_stmt 0 view .LVU242
 1017 000e 0023     		movs	r3, #0
 1018 0010 8360     		str	r3, [r0, #8]
 455:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1019              		.loc 1 455 3 is_stmt 1 view .LVU243
 455:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1020              		.loc 1 455 23 is_stmt 0 view .LVU244
 1021 0012 C360     		str	r3, [r0, #12]
 456:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1022              		.loc 1 456 3 is_stmt 1 view .LVU245
 456:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1023              		.loc 1 456 26 is_stmt 0 view .LVU246
 1024 0014 0361     		str	r3, [r0, #16]
 457:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1025              		.loc 1 457 3 is_stmt 1 view .LVU247
 457:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1026              		.loc 1 457 23 is_stmt 0 view .LVU248
 1027 0016 4361     		str	r3, [r0, #20]
 458:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 1028              		.loc 1 458 3 is_stmt 1 view .LVU249
 458:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
ARM GAS  /tmp/cclLRy0J.s 			page 36


 1029              		.loc 1 458 18 is_stmt 0 view .LVU250
 1030 0018 4FF40072 		mov	r2, #512
 1031 001c 8261     		str	r2, [r0, #24]
 459:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1032              		.loc 1 459 3 is_stmt 1 view .LVU251
 459:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1033              		.loc 1 459 32 is_stmt 0 view .LVU252
 1034 001e 1822     		movs	r2, #24
 1035 0020 C261     		str	r2, [r0, #28]
 460:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1036              		.loc 1 460 3 is_stmt 1 view .LVU253
 460:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1037              		.loc 1 460 23 is_stmt 0 view .LVU254
 1038 0022 0362     		str	r3, [r0, #32]
 461:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1039              		.loc 1 461 3 is_stmt 1 view .LVU255
 461:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1040              		.loc 1 461 21 is_stmt 0 view .LVU256
 1041 0024 4362     		str	r3, [r0, #36]
 462:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1042              		.loc 1 462 3 is_stmt 1 view .LVU257
 462:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1043              		.loc 1 462 29 is_stmt 0 view .LVU258
 1044 0026 8362     		str	r3, [r0, #40]
 463:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1045              		.loc 1 463 3 is_stmt 1 view .LVU259
 463:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1046              		.loc 1 463 28 is_stmt 0 view .LVU260
 1047 0028 0A23     		movs	r3, #10
 1048 002a C362     		str	r3, [r0, #44]
 464:Core/Src/main.c ****   {
 1049              		.loc 1 464 3 is_stmt 1 view .LVU261
 464:Core/Src/main.c ****   {
 1050              		.loc 1 464 7 is_stmt 0 view .LVU262
 1051 002c FFF7FEFF 		bl	HAL_SPI_Init
 1052              	.LVL64:
 464:Core/Src/main.c ****   {
 1053              		.loc 1 464 6 view .LVU263
 1054 0030 00B9     		cbnz	r0, .L48
 472:Core/Src/main.c **** 
 1055              		.loc 1 472 1 view .LVU264
 1056 0032 08BD     		pop	{r3, pc}
 1057              	.L48:
 466:Core/Src/main.c ****   }
 1058              		.loc 1 466 5 is_stmt 1 view .LVU265
 1059 0034 FFF7FEFF 		bl	Error_Handler
 1060              	.LVL65:
 1061              	.L50:
 1062              		.align	2
 1063              	.L49:
 1064 0038 00000000 		.word	.LANCHOR4
 1065 003c 00300140 		.word	1073819648
 1066              		.cfi_endproc
 1067              	.LFE142:
 1069              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1070              		.align	1
 1071              		.syntax unified
ARM GAS  /tmp/cclLRy0J.s 			page 37


 1072              		.thumb
 1073              		.thumb_func
 1075              	MX_USART1_UART_Init:
 1076              	.LFB143:
 480:Core/Src/main.c **** 
 1077              		.loc 1 480 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 08B5     		push	{r3, lr}
 1082              	.LCFI19:
 1083              		.cfi_def_cfa_offset 8
 1084              		.cfi_offset 3, -8
 1085              		.cfi_offset 14, -4
 489:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1086              		.loc 1 489 3 view .LVU267
 489:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1087              		.loc 1 489 19 is_stmt 0 view .LVU268
 1088 0002 0A48     		ldr	r0, .L55
 1089 0004 0A4B     		ldr	r3, .L55+4
 1090 0006 0360     		str	r3, [r0]
 490:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1091              		.loc 1 490 3 is_stmt 1 view .LVU269
 490:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1092              		.loc 1 490 24 is_stmt 0 view .LVU270
 1093 0008 4FF4E133 		mov	r3, #115200
 1094 000c 4360     		str	r3, [r0, #4]
 491:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1095              		.loc 1 491 3 is_stmt 1 view .LVU271
 491:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1096              		.loc 1 491 26 is_stmt 0 view .LVU272
 1097 000e 0023     		movs	r3, #0
 1098 0010 8360     		str	r3, [r0, #8]
 492:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1099              		.loc 1 492 3 is_stmt 1 view .LVU273
 492:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1100              		.loc 1 492 24 is_stmt 0 view .LVU274
 1101 0012 C360     		str	r3, [r0, #12]
 493:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1102              		.loc 1 493 3 is_stmt 1 view .LVU275
 493:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1103              		.loc 1 493 22 is_stmt 0 view .LVU276
 1104 0014 0361     		str	r3, [r0, #16]
 494:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1105              		.loc 1 494 3 is_stmt 1 view .LVU277
 494:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1106              		.loc 1 494 20 is_stmt 0 view .LVU278
 1107 0016 0C22     		movs	r2, #12
 1108 0018 4261     		str	r2, [r0, #20]
 495:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1109              		.loc 1 495 3 is_stmt 1 view .LVU279
 495:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1110              		.loc 1 495 25 is_stmt 0 view .LVU280
 1111 001a 8361     		str	r3, [r0, #24]
 496:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1112              		.loc 1 496 3 is_stmt 1 view .LVU281
 496:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  /tmp/cclLRy0J.s 			page 38


 1113              		.loc 1 496 28 is_stmt 0 view .LVU282
 1114 001c C361     		str	r3, [r0, #28]
 497:Core/Src/main.c ****   {
 1115              		.loc 1 497 3 is_stmt 1 view .LVU283
 497:Core/Src/main.c ****   {
 1116              		.loc 1 497 7 is_stmt 0 view .LVU284
 1117 001e FFF7FEFF 		bl	HAL_UART_Init
 1118              	.LVL66:
 497:Core/Src/main.c ****   {
 1119              		.loc 1 497 6 view .LVU285
 1120 0022 00B9     		cbnz	r0, .L54
 505:Core/Src/main.c **** 
 1121              		.loc 1 505 1 view .LVU286
 1122 0024 08BD     		pop	{r3, pc}
 1123              	.L54:
 499:Core/Src/main.c ****   }
 1124              		.loc 1 499 5 is_stmt 1 view .LVU287
 1125 0026 FFF7FEFF 		bl	Error_Handler
 1126              	.LVL67:
 1127              	.L56:
 1128 002a 00BF     		.align	2
 1129              	.L55:
 1130 002c 00000000 		.word	.LANCHOR0
 1131 0030 00100140 		.word	1073811456
 1132              		.cfi_endproc
 1133              	.LFE143:
 1135              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1136              		.align	1
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1141              	MX_I2C3_Init:
 1142              	.LFB140:
 345:Core/Src/main.c **** 
 1143              		.loc 1 345 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147 0000 08B5     		push	{r3, lr}
 1148              	.LCFI20:
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 3, -8
 1151              		.cfi_offset 14, -4
 354:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 1152              		.loc 1 354 3 view .LVU289
 354:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 400000;
 1153              		.loc 1 354 18 is_stmt 0 view .LVU290
 1154 0002 0A48     		ldr	r0, .L61
 1155 0004 0A4B     		ldr	r3, .L61+4
 1156 0006 0360     		str	r3, [r0]
 355:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1157              		.loc 1 355 3 is_stmt 1 view .LVU291
 355:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1158              		.loc 1 355 25 is_stmt 0 view .LVU292
 1159 0008 0A4B     		ldr	r3, .L61+8
 1160 000a 4360     		str	r3, [r0, #4]
 356:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
ARM GAS  /tmp/cclLRy0J.s 			page 39


 1161              		.loc 1 356 3 is_stmt 1 view .LVU293
 356:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 1162              		.loc 1 356 24 is_stmt 0 view .LVU294
 1163 000c 0023     		movs	r3, #0
 1164 000e 8360     		str	r3, [r0, #8]
 357:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1165              		.loc 1 357 3 is_stmt 1 view .LVU295
 357:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1166              		.loc 1 357 26 is_stmt 0 view .LVU296
 1167 0010 C360     		str	r3, [r0, #12]
 358:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1168              		.loc 1 358 3 is_stmt 1 view .LVU297
 358:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1169              		.loc 1 358 29 is_stmt 0 view .LVU298
 1170 0012 4FF48042 		mov	r2, #16384
 1171 0016 0261     		str	r2, [r0, #16]
 359:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 1172              		.loc 1 359 3 is_stmt 1 view .LVU299
 359:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 1173              		.loc 1 359 30 is_stmt 0 view .LVU300
 1174 0018 4361     		str	r3, [r0, #20]
 360:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1175              		.loc 1 360 3 is_stmt 1 view .LVU301
 360:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1176              		.loc 1 360 26 is_stmt 0 view .LVU302
 1177 001a 8361     		str	r3, [r0, #24]
 361:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1178              		.loc 1 361 3 is_stmt 1 view .LVU303
 361:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1179              		.loc 1 361 30 is_stmt 0 view .LVU304
 1180 001c C361     		str	r3, [r0, #28]
 362:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1181              		.loc 1 362 3 is_stmt 1 view .LVU305
 362:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1182              		.loc 1 362 28 is_stmt 0 view .LVU306
 1183 001e 0362     		str	r3, [r0, #32]
 363:Core/Src/main.c ****   {
 1184              		.loc 1 363 3 is_stmt 1 view .LVU307
 363:Core/Src/main.c ****   {
 1185              		.loc 1 363 7 is_stmt 0 view .LVU308
 1186 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1187              	.LVL68:
 363:Core/Src/main.c ****   {
 1188              		.loc 1 363 6 view .LVU309
 1189 0024 00B9     		cbnz	r0, .L60
 371:Core/Src/main.c **** 
 1190              		.loc 1 371 1 view .LVU310
 1191 0026 08BD     		pop	{r3, pc}
 1192              	.L60:
 365:Core/Src/main.c ****   }
 1193              		.loc 1 365 5 is_stmt 1 view .LVU311
 1194 0028 FFF7FEFF 		bl	Error_Handler
 1195              	.LVL69:
 1196              	.L62:
 1197              		.align	2
 1198              	.L61:
 1199 002c 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cclLRy0J.s 			page 40


 1200 0030 005C0040 		.word	1073765376
 1201 0034 801A0600 		.word	400000
 1202              		.cfi_endproc
 1203              	.LFE140:
 1205              		.section	.text.MX_CRC_Init,"ax",%progbits
 1206              		.align	1
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1211              	MX_CRC_Init:
 1212              	.LFB139:
 319:Core/Src/main.c **** 
 1213              		.loc 1 319 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217 0000 08B5     		push	{r3, lr}
 1218              	.LCFI21:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 3, -8
 1221              		.cfi_offset 14, -4
 328:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1222              		.loc 1 328 3 view .LVU313
 328:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 1223              		.loc 1 328 17 is_stmt 0 view .LVU314
 1224 0002 0448     		ldr	r0, .L67
 1225 0004 044B     		ldr	r3, .L67+4
 1226 0006 0360     		str	r3, [r0]
 329:Core/Src/main.c ****   {
 1227              		.loc 1 329 3 is_stmt 1 view .LVU315
 329:Core/Src/main.c ****   {
 1228              		.loc 1 329 7 is_stmt 0 view .LVU316
 1229 0008 FFF7FEFF 		bl	HAL_CRC_Init
 1230              	.LVL70:
 329:Core/Src/main.c ****   {
 1231              		.loc 1 329 6 view .LVU317
 1232 000c 00B9     		cbnz	r0, .L66
 337:Core/Src/main.c **** 
 1233              		.loc 1 337 1 view .LVU318
 1234 000e 08BD     		pop	{r3, pc}
 1235              	.L66:
 331:Core/Src/main.c ****   }
 1236              		.loc 1 331 5 is_stmt 1 view .LVU319
 1237 0010 FFF7FEFF 		bl	Error_Handler
 1238              	.LVL71:
 1239              	.L68:
 1240              		.align	2
 1241              	.L67:
 1242 0014 00000000 		.word	.LANCHOR5
 1243 0018 00300240 		.word	1073885184
 1244              		.cfi_endproc
 1245              	.LFE139:
 1247              		.section	.text.MX_RTC_Init,"ax",%progbits
 1248              		.align	1
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
ARM GAS  /tmp/cclLRy0J.s 			page 41


 1253              	MX_RTC_Init:
 1254              	.LFB141:
 379:Core/Src/main.c **** 
 1255              		.loc 1 379 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 24
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259 0000 00B5     		push	{lr}
 1260              	.LCFI22:
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 14, -4
 1263 0002 87B0     		sub	sp, sp, #28
 1264              	.LCFI23:
 1265              		.cfi_def_cfa_offset 32
 385:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1266              		.loc 1 385 3 view .LVU321
 385:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1267              		.loc 1 385 19 is_stmt 0 view .LVU322
 1268 0004 0023     		movs	r3, #0
 1269 0006 0193     		str	r3, [sp, #4]
 1270 0008 0293     		str	r3, [sp, #8]
 1271 000a 0393     		str	r3, [sp, #12]
 1272 000c 0493     		str	r3, [sp, #16]
 1273 000e 0593     		str	r3, [sp, #20]
 386:Core/Src/main.c **** 
 1274              		.loc 1 386 3 is_stmt 1 view .LVU323
 386:Core/Src/main.c **** 
 1275              		.loc 1 386 19 is_stmt 0 view .LVU324
 1276 0010 0093     		str	r3, [sp]
 394:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1277              		.loc 1 394 3 is_stmt 1 view .LVU325
 394:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1278              		.loc 1 394 17 is_stmt 0 view .LVU326
 1279 0012 1A48     		ldr	r0, .L77
 1280 0014 1A4A     		ldr	r2, .L77+4
 1281 0016 0260     		str	r2, [r0]
 395:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1282              		.loc 1 395 3 is_stmt 1 view .LVU327
 395:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1283              		.loc 1 395 24 is_stmt 0 view .LVU328
 1284 0018 4360     		str	r3, [r0, #4]
 396:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1285              		.loc 1 396 3 is_stmt 1 view .LVU329
 396:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1286              		.loc 1 396 26 is_stmt 0 view .LVU330
 1287 001a 7F22     		movs	r2, #127
 1288 001c 8260     		str	r2, [r0, #8]
 397:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1289              		.loc 1 397 3 is_stmt 1 view .LVU331
 397:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1290              		.loc 1 397 25 is_stmt 0 view .LVU332
 1291 001e FF22     		movs	r2, #255
 1292 0020 C260     		str	r2, [r0, #12]
 398:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1293              		.loc 1 398 3 is_stmt 1 view .LVU333
 398:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1294              		.loc 1 398 20 is_stmt 0 view .LVU334
ARM GAS  /tmp/cclLRy0J.s 			page 42


 1295 0022 0361     		str	r3, [r0, #16]
 399:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1296              		.loc 1 399 3 is_stmt 1 view .LVU335
 399:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1297              		.loc 1 399 28 is_stmt 0 view .LVU336
 1298 0024 4361     		str	r3, [r0, #20]
 400:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1299              		.loc 1 400 3 is_stmt 1 view .LVU337
 400:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1300              		.loc 1 400 24 is_stmt 0 view .LVU338
 1301 0026 8361     		str	r3, [r0, #24]
 401:Core/Src/main.c ****   {
 1302              		.loc 1 401 3 is_stmt 1 view .LVU339
 401:Core/Src/main.c ****   {
 1303              		.loc 1 401 7 is_stmt 0 view .LVU340
 1304 0028 FFF7FEFF 		bl	HAL_RTC_Init
 1305              	.LVL72:
 401:Core/Src/main.c ****   {
 1306              		.loc 1 401 6 view .LVU341
 1307 002c 00BB     		cbnz	r0, .L74
 412:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1308              		.loc 1 412 3 is_stmt 1 view .LVU342
 412:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1309              		.loc 1 412 15 is_stmt 0 view .LVU343
 1310 002e 0023     		movs	r3, #0
 1311 0030 8DF80430 		strb	r3, [sp, #4]
 413:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1312              		.loc 1 413 3 is_stmt 1 view .LVU344
 413:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1313              		.loc 1 413 17 is_stmt 0 view .LVU345
 1314 0034 8DF80530 		strb	r3, [sp, #5]
 414:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1315              		.loc 1 414 3 is_stmt 1 view .LVU346
 414:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1316              		.loc 1 414 17 is_stmt 0 view .LVU347
 1317 0038 8DF80630 		strb	r3, [sp, #6]
 415:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1318              		.loc 1 415 3 is_stmt 1 view .LVU348
 415:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1319              		.loc 1 415 24 is_stmt 0 view .LVU349
 1320 003c 0493     		str	r3, [sp, #16]
 416:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1321              		.loc 1 416 3 is_stmt 1 view .LVU350
 416:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1322              		.loc 1 416 24 is_stmt 0 view .LVU351
 1323 003e 0593     		str	r3, [sp, #20]
 417:Core/Src/main.c ****   {
 1324              		.loc 1 417 3 is_stmt 1 view .LVU352
 417:Core/Src/main.c ****   {
 1325              		.loc 1 417 7 is_stmt 0 view .LVU353
 1326 0040 0122     		movs	r2, #1
 1327 0042 01A9     		add	r1, sp, #4
 1328 0044 0D48     		ldr	r0, .L77
 1329 0046 FFF7FEFF 		bl	HAL_RTC_SetTime
 1330              	.LVL73:
 417:Core/Src/main.c ****   {
 1331              		.loc 1 417 6 view .LVU354
ARM GAS  /tmp/cclLRy0J.s 			page 43


 1332 004a 98B9     		cbnz	r0, .L75
 421:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1333              		.loc 1 421 3 is_stmt 1 view .LVU355
 421:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1334              		.loc 1 421 17 is_stmt 0 view .LVU356
 1335 004c 0122     		movs	r2, #1
 1336 004e 8DF80020 		strb	r2, [sp]
 422:Core/Src/main.c ****   sDate.Date = 0x1;
 1337              		.loc 1 422 3 is_stmt 1 view .LVU357
 422:Core/Src/main.c ****   sDate.Date = 0x1;
 1338              		.loc 1 422 15 is_stmt 0 view .LVU358
 1339 0052 8DF80120 		strb	r2, [sp, #1]
 423:Core/Src/main.c ****   sDate.Year = 0x0;
 1340              		.loc 1 423 3 is_stmt 1 view .LVU359
 423:Core/Src/main.c ****   sDate.Year = 0x0;
 1341              		.loc 1 423 14 is_stmt 0 view .LVU360
 1342 0056 8DF80220 		strb	r2, [sp, #2]
 424:Core/Src/main.c **** 
 1343              		.loc 1 424 3 is_stmt 1 view .LVU361
 424:Core/Src/main.c **** 
 1344              		.loc 1 424 14 is_stmt 0 view .LVU362
 1345 005a 0023     		movs	r3, #0
 1346 005c 8DF80330 		strb	r3, [sp, #3]
 426:Core/Src/main.c ****   {
 1347              		.loc 1 426 3 is_stmt 1 view .LVU363
 426:Core/Src/main.c ****   {
 1348              		.loc 1 426 7 is_stmt 0 view .LVU364
 1349 0060 6946     		mov	r1, sp
 1350 0062 0648     		ldr	r0, .L77
 1351 0064 FFF7FEFF 		bl	HAL_RTC_SetDate
 1352              	.LVL74:
 426:Core/Src/main.c ****   {
 1353              		.loc 1 426 6 view .LVU365
 1354 0068 30B9     		cbnz	r0, .L76
 434:Core/Src/main.c **** 
 1355              		.loc 1 434 1 view .LVU366
 1356 006a 07B0     		add	sp, sp, #28
 1357              	.LCFI24:
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 4
 1360              		@ sp needed
 1361 006c 5DF804FB 		ldr	pc, [sp], #4
 1362              	.L74:
 1363              	.LCFI25:
 1364              		.cfi_restore_state
 403:Core/Src/main.c ****   }
 1365              		.loc 1 403 5 is_stmt 1 view .LVU367
 1366 0070 FFF7FEFF 		bl	Error_Handler
 1367              	.LVL75:
 1368              	.L75:
 419:Core/Src/main.c ****   }
 1369              		.loc 1 419 5 view .LVU368
 1370 0074 FFF7FEFF 		bl	Error_Handler
 1371              	.LVL76:
 1372              	.L76:
 428:Core/Src/main.c ****   }
 1373              		.loc 1 428 5 view .LVU369
ARM GAS  /tmp/cclLRy0J.s 			page 44


 1374 0078 FFF7FEFF 		bl	Error_Handler
 1375              	.LVL77:
 1376              	.L78:
 1377              		.align	2
 1378              	.L77:
 1379 007c 00000000 		.word	.LANCHOR6
 1380 0080 00280040 		.word	1073752064
 1381              		.cfi_endproc
 1382              	.LFE141:
 1384              		.section	.text.SystemClock_Config,"ax",%progbits
 1385              		.align	1
 1386              		.global	SystemClock_Config
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1391              	SystemClock_Config:
 1392              	.LFB138:
 272:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1393              		.loc 1 272 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 80
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397 0000 00B5     		push	{lr}
 1398              	.LCFI26:
 1399              		.cfi_def_cfa_offset 4
 1400              		.cfi_offset 14, -4
 1401 0002 95B0     		sub	sp, sp, #84
 1402              	.LCFI27:
 1403              		.cfi_def_cfa_offset 88
 273:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1404              		.loc 1 273 3 view .LVU371
 273:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1405              		.loc 1 273 22 is_stmt 0 view .LVU372
 1406 0004 3022     		movs	r2, #48
 1407 0006 0021     		movs	r1, #0
 1408 0008 08A8     		add	r0, sp, #32
 1409 000a FFF7FEFF 		bl	memset
 1410              	.LVL78:
 274:Core/Src/main.c **** 
 1411              		.loc 1 274 3 is_stmt 1 view .LVU373
 274:Core/Src/main.c **** 
 1412              		.loc 1 274 22 is_stmt 0 view .LVU374
 1413 000e 0023     		movs	r3, #0
 1414 0010 0393     		str	r3, [sp, #12]
 1415 0012 0493     		str	r3, [sp, #16]
 1416 0014 0593     		str	r3, [sp, #20]
 1417 0016 0693     		str	r3, [sp, #24]
 1418 0018 0793     		str	r3, [sp, #28]
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1419              		.loc 1 278 3 is_stmt 1 view .LVU375
 1420              	.LBB14:
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1421              		.loc 1 278 3 view .LVU376
 1422 001a 0193     		str	r3, [sp, #4]
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1423              		.loc 1 278 3 view .LVU377
 1424 001c 214A     		ldr	r2, .L85
ARM GAS  /tmp/cclLRy0J.s 			page 45


 1425 001e 116C     		ldr	r1, [r2, #64]
 1426 0020 41F08051 		orr	r1, r1, #268435456
 1427 0024 1164     		str	r1, [r2, #64]
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1428              		.loc 1 278 3 view .LVU378
 1429 0026 126C     		ldr	r2, [r2, #64]
 1430 0028 02F08052 		and	r2, r2, #268435456
 1431 002c 0192     		str	r2, [sp, #4]
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1432              		.loc 1 278 3 view .LVU379
 1433 002e 019A     		ldr	r2, [sp, #4]
 1434              	.LBE14:
 278:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1435              		.loc 1 278 3 view .LVU380
 279:Core/Src/main.c **** 
 1436              		.loc 1 279 3 view .LVU381
 1437              	.LBB15:
 279:Core/Src/main.c **** 
 1438              		.loc 1 279 3 view .LVU382
 1439 0030 0293     		str	r3, [sp, #8]
 279:Core/Src/main.c **** 
 1440              		.loc 1 279 3 view .LVU383
 1441 0032 1D4A     		ldr	r2, .L85+4
 1442 0034 1368     		ldr	r3, [r2]
 1443 0036 23F44043 		bic	r3, r3, #49152
 1444 003a 43F40043 		orr	r3, r3, #32768
 1445 003e 1360     		str	r3, [r2]
 279:Core/Src/main.c **** 
 1446              		.loc 1 279 3 view .LVU384
 1447 0040 1368     		ldr	r3, [r2]
 1448 0042 03F44043 		and	r3, r3, #49152
 1449 0046 0293     		str	r3, [sp, #8]
 279:Core/Src/main.c **** 
 1450              		.loc 1 279 3 view .LVU385
 1451 0048 029B     		ldr	r3, [sp, #8]
 1452              	.LBE15:
 279:Core/Src/main.c **** 
 1453              		.loc 1 279 3 view .LVU386
 284:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1454              		.loc 1 284 3 view .LVU387
 284:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1455              		.loc 1 284 36 is_stmt 0 view .LVU388
 1456 004a 0923     		movs	r3, #9
 1457 004c 0893     		str	r3, [sp, #32]
 285:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1458              		.loc 1 285 3 is_stmt 1 view .LVU389
 285:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1459              		.loc 1 285 30 is_stmt 0 view .LVU390
 1460 004e 4FF48033 		mov	r3, #65536
 1461 0052 0993     		str	r3, [sp, #36]
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1462              		.loc 1 286 3 is_stmt 1 view .LVU391
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1463              		.loc 1 286 30 is_stmt 0 view .LVU392
 1464 0054 0123     		movs	r3, #1
 1465 0056 0D93     		str	r3, [sp, #52]
 287:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/cclLRy0J.s 			page 46


 1466              		.loc 1 287 3 is_stmt 1 view .LVU393
 287:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1467              		.loc 1 287 34 is_stmt 0 view .LVU394
 1468 0058 0223     		movs	r3, #2
 1469 005a 0E93     		str	r3, [sp, #56]
 288:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1470              		.loc 1 288 3 is_stmt 1 view .LVU395
 288:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1471              		.loc 1 288 35 is_stmt 0 view .LVU396
 1472 005c 4FF48002 		mov	r2, #4194304
 1473 0060 0F92     		str	r2, [sp, #60]
 289:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1474              		.loc 1 289 3 is_stmt 1 view .LVU397
 289:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 84;
 1475              		.loc 1 289 30 is_stmt 0 view .LVU398
 1476 0062 0822     		movs	r2, #8
 1477 0064 1092     		str	r2, [sp, #64]
 290:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1478              		.loc 1 290 3 is_stmt 1 view .LVU399
 290:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1479              		.loc 1 290 30 is_stmt 0 view .LVU400
 1480 0066 5422     		movs	r2, #84
 1481 0068 1192     		str	r2, [sp, #68]
 291:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1482              		.loc 1 291 3 is_stmt 1 view .LVU401
 291:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1483              		.loc 1 291 30 is_stmt 0 view .LVU402
 1484 006a 1293     		str	r3, [sp, #72]
 292:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1485              		.loc 1 292 3 is_stmt 1 view .LVU403
 292:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1486              		.loc 1 292 30 is_stmt 0 view .LVU404
 1487 006c 0423     		movs	r3, #4
 1488 006e 1393     		str	r3, [sp, #76]
 293:Core/Src/main.c ****   {
 1489              		.loc 1 293 3 is_stmt 1 view .LVU405
 293:Core/Src/main.c ****   {
 1490              		.loc 1 293 7 is_stmt 0 view .LVU406
 1491 0070 08A8     		add	r0, sp, #32
 1492 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1493              	.LVL79:
 293:Core/Src/main.c ****   {
 1494              		.loc 1 293 6 view .LVU407
 1495 0076 80B9     		cbnz	r0, .L83
 300:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1496              		.loc 1 300 3 is_stmt 1 view .LVU408
 300:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1497              		.loc 1 300 31 is_stmt 0 view .LVU409
 1498 0078 0F23     		movs	r3, #15
 1499 007a 0393     		str	r3, [sp, #12]
 302:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1500              		.loc 1 302 3 is_stmt 1 view .LVU410
 302:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1501              		.loc 1 302 34 is_stmt 0 view .LVU411
 1502 007c 0221     		movs	r1, #2
 1503 007e 0491     		str	r1, [sp, #16]
 303:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/cclLRy0J.s 			page 47


 1504              		.loc 1 303 3 is_stmt 1 view .LVU412
 303:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1505              		.loc 1 303 35 is_stmt 0 view .LVU413
 1506 0080 0023     		movs	r3, #0
 1507 0082 0593     		str	r3, [sp, #20]
 304:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1508              		.loc 1 304 3 is_stmt 1 view .LVU414
 304:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1509              		.loc 1 304 36 is_stmt 0 view .LVU415
 1510 0084 4FF48052 		mov	r2, #4096
 1511 0088 0692     		str	r2, [sp, #24]
 305:Core/Src/main.c **** 
 1512              		.loc 1 305 3 is_stmt 1 view .LVU416
 305:Core/Src/main.c **** 
 1513              		.loc 1 305 36 is_stmt 0 view .LVU417
 1514 008a 0793     		str	r3, [sp, #28]
 307:Core/Src/main.c ****   {
 1515              		.loc 1 307 3 is_stmt 1 view .LVU418
 307:Core/Src/main.c ****   {
 1516              		.loc 1 307 7 is_stmt 0 view .LVU419
 1517 008c 03A8     		add	r0, sp, #12
 1518 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1519              	.LVL80:
 307:Core/Src/main.c ****   {
 1520              		.loc 1 307 6 view .LVU420
 1521 0092 20B9     		cbnz	r0, .L84
 311:Core/Src/main.c **** 
 1522              		.loc 1 311 1 view .LVU421
 1523 0094 15B0     		add	sp, sp, #84
 1524              	.LCFI28:
 1525              		.cfi_remember_state
 1526              		.cfi_def_cfa_offset 4
 1527              		@ sp needed
 1528 0096 5DF804FB 		ldr	pc, [sp], #4
 1529              	.L83:
 1530              	.LCFI29:
 1531              		.cfi_restore_state
 295:Core/Src/main.c ****   }
 1532              		.loc 1 295 5 is_stmt 1 view .LVU422
 1533 009a FFF7FEFF 		bl	Error_Handler
 1534              	.LVL81:
 1535              	.L84:
 309:Core/Src/main.c ****   }
 1536              		.loc 1 309 5 view .LVU423
 1537 009e FFF7FEFF 		bl	Error_Handler
 1538              	.LVL82:
 1539              	.L86:
 1540 00a2 00BF     		.align	2
 1541              	.L85:
 1542 00a4 00380240 		.word	1073887232
 1543 00a8 00700040 		.word	1073770496
 1544              		.cfi_endproc
 1545              	.LFE138:
 1547              		.section	.text.main,"ax",%progbits
 1548              		.align	1
 1549              		.global	main
 1550              		.syntax unified
ARM GAS  /tmp/cclLRy0J.s 			page 48


 1551              		.thumb
 1552              		.thumb_func
 1554              	main:
 1555              	.LFB137:
 185:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1556              		.loc 1 185 1 view -0
 1557              		.cfi_startproc
 1558              		@ Volatile: function does not return.
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561 0000 08B5     		push	{r3, lr}
 1562              	.LCFI30:
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 3, -8
 1565              		.cfi_offset 14, -4
 193:Core/Src/main.c **** 
 1566              		.loc 1 193 3 view .LVU425
 1567 0002 FFF7FEFF 		bl	HAL_Init
 1568              	.LVL83:
 200:Core/Src/main.c **** 
 1569              		.loc 1 200 3 view .LVU426
 1570 0006 FFF7FEFF 		bl	SystemClock_Config
 1571              	.LVL84:
 207:Core/Src/main.c ****   MX_DMA_Init();
 1572              		.loc 1 207 3 view .LVU427
 1573 000a FFF7FEFF 		bl	MX_GPIO_Init
 1574              	.LVL85:
 208:Core/Src/main.c ****   MX_USART2_UART_Init();
 1575              		.loc 1 208 3 view .LVU428
 1576 000e FFF7FEFF 		bl	MX_DMA_Init
 1577              	.LVL86:
 209:Core/Src/main.c ****   MX_SPI1_Init();
 1578              		.loc 1 209 3 view .LVU429
 1579 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 1580              	.LVL87:
 210:Core/Src/main.c ****   MX_USART1_UART_Init();
 1581              		.loc 1 210 3 view .LVU430
 1582 0016 FFF7FEFF 		bl	MX_SPI1_Init
 1583              	.LVL88:
 211:Core/Src/main.c ****   MX_I2C3_Init();
 1584              		.loc 1 211 3 view .LVU431
 1585 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1586              	.LVL89:
 212:Core/Src/main.c ****   MX_CRC_Init();
 1587              		.loc 1 212 3 view .LVU432
 1588 001e FFF7FEFF 		bl	MX_I2C3_Init
 1589              	.LVL90:
 213:Core/Src/main.c ****   MX_RTC_Init();
 1590              		.loc 1 213 3 view .LVU433
 1591 0022 FFF7FEFF 		bl	MX_CRC_Init
 1592              	.LVL91:
 214:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1593              		.loc 1 214 3 view .LVU434
 1594 0026 FFF7FEFF 		bl	MX_RTC_Init
 1595              	.LVL92:
 219:Core/Src/main.c **** 
 1596              		.loc 1 219 3 view .LVU435
ARM GAS  /tmp/cclLRy0J.s 			page 49


 1597 002a FFF7FEFF 		bl	print_lis2hd12_who_am_i
 1598              	.LVL93:
 1599              	.L88:
 254:Core/Src/main.c ****   {
 1600              		.loc 1 254 3 discriminator 1 view .LVU436
 257:Core/Src/main.c ****     HAL_Delay(500);
 1601              		.loc 1 257 5 discriminator 1 view .LVU437
 1602 002e 0121     		movs	r1, #1
 1603 0030 0348     		ldr	r0, .L90
 1604 0032 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1605              	.LVL94:
 258:Core/Src/main.c ****     // read_pressure();
 1606              		.loc 1 258 5 discriminator 1 view .LVU438
 1607 0036 4FF4FA70 		mov	r0, #500
 1608 003a FFF7FEFF 		bl	HAL_Delay
 1609              	.LVL95:
 254:Core/Src/main.c ****   {
 1610              		.loc 1 254 9 discriminator 1 view .LVU439
 1611 003e F6E7     		b	.L88
 1612              	.L91:
 1613              		.align	2
 1614              	.L90:
 1615 0040 00040240 		.word	1073873920
 1616              		.cfi_endproc
 1617              	.LFE137:
 1619              		.global	hdma_usart2_tx
 1620              		.global	hdma_usart2_rx
 1621              		.global	hdma_usart1_tx
 1622              		.global	huart2
 1623              		.global	huart1
 1624              		.global	hdma_spi1_tx
 1625              		.global	hdma_spi1_rx
 1626              		.global	hspi1
 1627              		.global	hrtc
 1628              		.global	hdma_i2c3_tx
 1629              		.global	hdma_i2c3_rx
 1630              		.global	hi2c3
 1631              		.global	hcrc
 1632              		.section	.bss.buffer.0,"aw",%nobits
 1633              		.align	2
 1634              		.set	.LANCHOR2,. + 0
 1637              	buffer.0:
 1638 0000 00000000 		.space	32
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1639              		.section	.bss.hcrc,"aw",%nobits
 1640              		.align	2
 1641              		.set	.LANCHOR5,. + 0
 1644              	hcrc:
 1645 0000 00000000 		.space	8
 1645      00000000 
 1646              		.section	.bss.hdma_i2c3_rx,"aw",%nobits
 1647              		.align	2
 1650              	hdma_i2c3_rx:
 1651 0000 00000000 		.space	96
ARM GAS  /tmp/cclLRy0J.s 			page 50


 1651      00000000 
 1651      00000000 
 1651      00000000 
 1651      00000000 
 1652              		.section	.bss.hdma_i2c3_tx,"aw",%nobits
 1653              		.align	2
 1656              	hdma_i2c3_tx:
 1657 0000 00000000 		.space	96
 1657      00000000 
 1657      00000000 
 1657      00000000 
 1657      00000000 
 1658              		.section	.bss.hdma_spi1_rx,"aw",%nobits
 1659              		.align	2
 1662              	hdma_spi1_rx:
 1663 0000 00000000 		.space	96
 1663      00000000 
 1663      00000000 
 1663      00000000 
 1663      00000000 
 1664              		.section	.bss.hdma_spi1_tx,"aw",%nobits
 1665              		.align	2
 1668              	hdma_spi1_tx:
 1669 0000 00000000 		.space	96
 1669      00000000 
 1669      00000000 
 1669      00000000 
 1669      00000000 
 1670              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 1671              		.align	2
 1674              	hdma_usart1_tx:
 1675 0000 00000000 		.space	96
 1675      00000000 
 1675      00000000 
 1675      00000000 
 1675      00000000 
 1676              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 1677              		.align	2
 1680              	hdma_usart2_rx:
 1681 0000 00000000 		.space	96
 1681      00000000 
 1681      00000000 
 1681      00000000 
 1681      00000000 
 1682              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 1683              		.align	2
 1686              	hdma_usart2_tx:
 1687 0000 00000000 		.space	96
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1687      00000000 
 1688              		.section	.bss.hi2c3,"aw",%nobits
 1689              		.align	2
 1690              		.set	.LANCHOR1,. + 0
 1693              	hi2c3:
 1694 0000 00000000 		.space	84
ARM GAS  /tmp/cclLRy0J.s 			page 51


 1694      00000000 
 1694      00000000 
 1694      00000000 
 1694      00000000 
 1695              		.section	.bss.hrtc,"aw",%nobits
 1696              		.align	2
 1697              		.set	.LANCHOR6,. + 0
 1700              	hrtc:
 1701 0000 00000000 		.space	32
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1701      00000000 
 1702              		.section	.bss.hspi1,"aw",%nobits
 1703              		.align	2
 1704              		.set	.LANCHOR4,. + 0
 1707              	hspi1:
 1708 0000 00000000 		.space	88
 1708      00000000 
 1708      00000000 
 1708      00000000 
 1708      00000000 
 1709              		.section	.bss.huart1,"aw",%nobits
 1710              		.align	2
 1711              		.set	.LANCHOR0,. + 0
 1714              	huart1:
 1715 0000 00000000 		.space	68
 1715      00000000 
 1715      00000000 
 1715      00000000 
 1715      00000000 
 1716              		.section	.bss.huart2,"aw",%nobits
 1717              		.align	2
 1718              		.set	.LANCHOR3,. + 0
 1721              	huart2:
 1722 0000 00000000 		.space	68
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1723              		.text
 1724              	.Letext0:
 1725              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1726              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1727              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1728              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1729              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1730              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1731              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1732              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1733              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_crc.h"
 1734              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1735              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1736              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1737              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1738              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1739              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cclLRy0J.s 			page 52


 1740              		.file 18 "Core/Inc/bmp280.h"
 1741              		.file 19 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/stdio.h"
 1742              		.file 20 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 1743              		.file 21 "Core/Inc/lis2hd12.h"
 1744              		.file 22 "<built-in>"
ARM GAS  /tmp/cclLRy0J.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclLRy0J.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cclLRy0J.s:289    .text.MX_GPIO_Init:0000000000000138 $d
     /tmp/cclLRy0J.s:298    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:303    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cclLRy0J.s:430    .text.MX_DMA_Init:00000000000000a4 $d
     /tmp/cclLRy0J.s:435    .rodata.i2c_scan.str1.4:0000000000000000 $d
     /tmp/cclLRy0J.s:448    .text.i2c_scan:0000000000000000 $t
     /tmp/cclLRy0J.s:454    .text.i2c_scan:0000000000000000 i2c_scan
     /tmp/cclLRy0J.s:610    .text.i2c_scan:00000000000000c0 $d
     /tmp/cclLRy0J.s:621    .rodata.print_bmp280_id.str1.4:0000000000000000 $d
     /tmp/cclLRy0J.s:625    .text.print_bmp280_id:0000000000000000 $t
     /tmp/cclLRy0J.s:631    .text.print_bmp280_id:0000000000000000 print_bmp280_id
     /tmp/cclLRy0J.s:680    .text.print_bmp280_id:0000000000000038 $d
     /tmp/cclLRy0J.s:686    .rodata.print_lis2hd12_who_am_i.str1.4:0000000000000000 $d
     /tmp/cclLRy0J.s:693    .text.print_lis2hd12_who_am_i:0000000000000000 $t
     /tmp/cclLRy0J.s:699    .text.print_lis2hd12_who_am_i:0000000000000000 print_lis2hd12_who_am_i
     /tmp/cclLRy0J.s:776    .text.print_lis2hd12_who_am_i:0000000000000054 $d
     /tmp/cclLRy0J.s:783    .rodata.read_pressure.str1.4:0000000000000000 $d
     /tmp/cclLRy0J.s:790    .text.read_pressure:0000000000000000 $t
     /tmp/cclLRy0J.s:796    .text.read_pressure:0000000000000000 read_pressure
     /tmp/cclLRy0J.s:878    .text.read_pressure:0000000000000058 $d
     /tmp/cclLRy0J.s:886    .text.Error_Handler:0000000000000000 $t
     /tmp/cclLRy0J.s:892    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclLRy0J.s:924    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:929    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cclLRy0J.s:984    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/cclLRy0J.s:990    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:995    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cclLRy0J.s:1064   .text.MX_SPI1_Init:0000000000000038 $d
     /tmp/cclLRy0J.s:1070   .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:1075   .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cclLRy0J.s:1130   .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/cclLRy0J.s:1136   .text.MX_I2C3_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:1141   .text.MX_I2C3_Init:0000000000000000 MX_I2C3_Init
     /tmp/cclLRy0J.s:1199   .text.MX_I2C3_Init:000000000000002c $d
     /tmp/cclLRy0J.s:1206   .text.MX_CRC_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:1211   .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/cclLRy0J.s:1242   .text.MX_CRC_Init:0000000000000014 $d
     /tmp/cclLRy0J.s:1248   .text.MX_RTC_Init:0000000000000000 $t
     /tmp/cclLRy0J.s:1253   .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/cclLRy0J.s:1379   .text.MX_RTC_Init:000000000000007c $d
     /tmp/cclLRy0J.s:1385   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclLRy0J.s:1391   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclLRy0J.s:1542   .text.SystemClock_Config:00000000000000a4 $d
     /tmp/cclLRy0J.s:1548   .text.main:0000000000000000 $t
     /tmp/cclLRy0J.s:1554   .text.main:0000000000000000 main
     /tmp/cclLRy0J.s:1615   .text.main:0000000000000040 $d
     /tmp/cclLRy0J.s:1686   .bss.hdma_usart2_tx:0000000000000000 hdma_usart2_tx
     /tmp/cclLRy0J.s:1680   .bss.hdma_usart2_rx:0000000000000000 hdma_usart2_rx
     /tmp/cclLRy0J.s:1674   .bss.hdma_usart1_tx:0000000000000000 hdma_usart1_tx
     /tmp/cclLRy0J.s:1721   .bss.huart2:0000000000000000 huart2
     /tmp/cclLRy0J.s:1714   .bss.huart1:0000000000000000 huart1
     /tmp/cclLRy0J.s:1668   .bss.hdma_spi1_tx:0000000000000000 hdma_spi1_tx
     /tmp/cclLRy0J.s:1662   .bss.hdma_spi1_rx:0000000000000000 hdma_spi1_rx
ARM GAS  /tmp/cclLRy0J.s 			page 54


     /tmp/cclLRy0J.s:1707   .bss.hspi1:0000000000000000 hspi1
     /tmp/cclLRy0J.s:1700   .bss.hrtc:0000000000000000 hrtc
     /tmp/cclLRy0J.s:1656   .bss.hdma_i2c3_tx:0000000000000000 hdma_i2c3_tx
     /tmp/cclLRy0J.s:1650   .bss.hdma_i2c3_rx:0000000000000000 hdma_i2c3_rx
     /tmp/cclLRy0J.s:1693   .bss.hi2c3:0000000000000000 hi2c3
     /tmp/cclLRy0J.s:1644   .bss.hcrc:0000000000000000 hcrc
     /tmp/cclLRy0J.s:1633   .bss.buffer.0:0000000000000000 $d
     /tmp/cclLRy0J.s:1637   .bss.buffer.0:0000000000000000 buffer.0
     /tmp/cclLRy0J.s:1640   .bss.hcrc:0000000000000000 $d
     /tmp/cclLRy0J.s:1647   .bss.hdma_i2c3_rx:0000000000000000 $d
     /tmp/cclLRy0J.s:1653   .bss.hdma_i2c3_tx:0000000000000000 $d
     /tmp/cclLRy0J.s:1659   .bss.hdma_spi1_rx:0000000000000000 $d
     /tmp/cclLRy0J.s:1665   .bss.hdma_spi1_tx:0000000000000000 $d
     /tmp/cclLRy0J.s:1671   .bss.hdma_usart1_tx:0000000000000000 $d
     /tmp/cclLRy0J.s:1677   .bss.hdma_usart2_rx:0000000000000000 $d
     /tmp/cclLRy0J.s:1683   .bss.hdma_usart2_tx:0000000000000000 $d
     /tmp/cclLRy0J.s:1689   .bss.hi2c3:0000000000000000 $d
     /tmp/cclLRy0J.s:1696   .bss.hrtc:0000000000000000 $d
     /tmp/cclLRy0J.s:1703   .bss.hspi1:0000000000000000 $d
     /tmp/cclLRy0J.s:1710   .bss.huart1:0000000000000000 $d
     /tmp/cclLRy0J.s:1717   .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
sprintf
HAL_I2C_IsDeviceReady
bmp280_getid
snprintf
lis2hd12_who_am_i
strlen
bmp280_start_press_read
HAL_Delay
bmp280_get_temp
memset
HAL_UART_Init
HAL_SPI_Init
HAL_I2C_Init
HAL_CRC_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
